#!/bin/bash
# üß™ –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
# –ê–≤—Ç–æ—Ä: g1if
# –í–µ—Ä—Å–∏—è: 2.0
# –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/g1if/system-admin-portfolio

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
LOG_DIR="$PROJECT_ROOT/logs"
REPORTS_DIR="$PROJECT_ROOT/reports"
TESTS_DIR="$PROJECT_ROOT/tests"
LOG_FILE="$LOG_DIR/script-tests.log"
REPORT_FILE="$REPORTS_DIR/test-report-$(date +%Y%m%d_%H%M%S).html"

mkdir -p "$LOG_DIR" "$REPORTS_DIR" "$TESTS_DIR"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
NC='\033[0m'

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log() {
    local level=$1
    local message=$2
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    echo "[$timestamp] [$level] $message" >> "$LOG_FILE"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
    log "SUCCESS" "$1"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
    log "ERROR" "$1"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
    log "WARNING" "$1"
}

print_info() {
    echo -e "${CYAN}‚ÑπÔ∏è  $1${NC}"
    log "INFO" "$1"
}

print_header() {
    echo -e "${MAGENTA}"
    echo "üß™ ==========================================="
    echo "   –ö–û–ú–ü–õ–ï–ö–°–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø v2.0"
    echo "   $(date)"
    echo "   –ê–≤—Ç–æ—Ä: g1if"
    echo "==========================================="
    echo -e "${NC}"
}

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_TESTS=0
SKIPPED_TESTS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞
test_script() {
    local script_name=$1
    local test_type=$2
    local test_command=$3
    local description=$4
    
    ((TOTAL_TESTS++))
    
    echo -n "üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º $script_name ($test_type)... "
    
    if [ ! -f "./scripts/$script_name" ]; then
        echo -e "${RED}üìõ NOT FOUND${NC}"
        log "ERROR" "–°–∫—Ä–∏–ø—Ç $script_name –Ω–µ –Ω–∞–π–¥–µ–Ω"
        ((FAILED_TESTS++))
        return 2
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    if [ ! -x "./scripts/$script_name" ]; then
        chmod +x "./scripts/$script_name"
        print_warning "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è $script_name"
    fi
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç
    if eval $test_command >> "$LOG_FILE" 2>&1; then
        echo -e "${GREEN}‚úÖ PASSED${NC}"
        log "SUCCESS" "$script_name ($test_type): $description - PASSED"
        ((PASSED_TESTS++))
        return 0
    else
        echo -e "${RED}‚ùå FAILED${NC}"
        log "ERROR" "$script_name ($test_type): $description - FAILED"
        ((FAILED_TESTS++))
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Bash
test_syntax() {
    local script_name=$1
    
    echo -n "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ $script_name... "
    
    if bash -n "./scripts/$script_name" >> "$LOG_FILE" 2>&1; then
        echo -e "${GREEN}‚úÖ VALID${NC}"
        log "SUCCESS" "–°–∏–Ω—Ç–∞–∫—Å–∏—Å $script_name –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
        return 0
    else
        echo -e "${RED}‚ùå INVALID${NC}"
        log "ERROR" "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ $script_name"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å shellcheck
test_shellcheck() {
    local script_name=$1
    
    if ! command -v shellcheck &> /dev/null; then
        return 0  # shellcheck –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
    fi
    
    echo -n "üìã ShellCheck $script_name... "
    
    if shellcheck "./scripts/$script_name" >> "$LOG_FILE" 2>&1; then
        echo -e "${GREEN}‚úÖ CLEAN${NC}"
        log "SUCCESS" "ShellCheck $script_name –ø—Ä–æ—à–µ–ª –±–µ–∑ –æ—à–∏–±–æ–∫"
        return 0
    else
        echo -e "${YELLOW}‚ö†Ô∏è  WARNINGS${NC}"
        log "WARNING" "ShellCheck –æ–±–Ω–∞—Ä—É–∂–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –≤ $script_name"
        return 0  # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –Ω–µ —Å—á–∏—Ç–∞–µ–º –∑–∞ –æ—à–∏–±–∫—É
    fi
}

# –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
comprehensive_test() {
    local script_name=$1
    local test_command=$2
    local description=$3
    
    print_info "–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: $script_name"
    
    # –¢–µ—Å—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
    test_syntax "$script_name"
    
    # –¢–µ—Å—Ç shellcheck
    test_shellcheck "$script_name"
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
    test_script "$script_name" "functionality" "$test_command" "$description"
    
    echo ""
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∞
test_system_monitor() {
    comprehensive_test "system-monitor.sh" \
        "./scripts/system-monitor.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∞"
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è system-monitor
    test_script "system-monitor.sh" "quick" \
        "./scripts/system-monitor.sh quick" \
        "–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
    
    test_script "system-monitor.sh" "config" \
        "./scripts/system-monitor.sh config" \
        "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
test_service_manager() {
    comprehensive_test "service-manager.sh" \
        "./scripts/service-manager.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
    
    test_script "service-manager.sh" "list" \
        "./scripts/service-manager.sh list" \
        "–°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–∏—Å–æ–≤"
    
    test_script "service-manager.sh" "status" \
        "./scripts/service-manager.sh status" \
        "–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
test_user_manager() {
    comprehensive_test "user-manager.sh" \
        "./scripts/user-manager.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    
    test_script "user-manager.sh" "list-users" \
        "./scripts/user-manager.sh list-users" \
        "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    
    test_script "user-manager.sh" "list-groups" \
        "./scripts/user-manager.sh list-groups" \
        "–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ–ø–æ–≤–µ—â–µ–Ω–∏–π
test_alert_system() {
    comprehensive_test "alert-system.sh" \
        "./scripts/alert-system.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –æ–ø–æ–≤–µ—â–µ–Ω–∏–π"
    
    test_script "alert-system.sh" "config" \
        "./scripts/alert-system.sh config" \
        "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    
    test_script "alert-system.sh" "test" \
        "./scripts/alert-system.sh test" \
        "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
test_backup_manager() {
    comprehensive_test "backup-manager.sh" \
        "./scripts/backup-manager.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π"
    
    test_script "backup-manager.sh" "config" \
        "./scripts/backup-manager.sh config" \
        "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
test_security_audit() {
    comprehensive_test "security-audit.sh" \
        "./scripts/security-audit.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    
    test_script "security-audit.sh" "quick" \
        "./scripts/security-audit.sh quick" \
        "–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–∏
test_network_tools() {
    comprehensive_test "network-analyzer.sh" \
        "./scripts/network-analyzer.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Å–µ—Ç–∏"
    
    comprehensive_test "ssl-cert-checker.sh" \
        "./scripts/ssl-cert-checker.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ SSL"
    
    test_script "ssl-cert-checker.sh" "config" \
        "./scripts/ssl-cert-checker.sh config" \
        "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ SSL"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–æ–≤
test_disk_tools() {
    comprehensive_test "disk-manager.sh" \
        "./scripts/disk-manager.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –¥–∏—Å–∫–æ–≤"
    
    test_script "disk-manager.sh" "info" \
        "./scripts/disk-manager.sh info" \
        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∏—Å–∫–∞—Ö"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Docker
test_docker_tools() {
    comprehensive_test "docker-manager.sh" \
        "./scripts/docker-manager.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ Docker"
    
    comprehensive_test "install-docker.sh" \
        "./scripts/install-docker.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞ Docker"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Ç–∏–ª–∏—Ç
test_utility_tools() {
    comprehensive_test "package-manager.sh" \
        "./scripts/package-manager.sh help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–∞–∫–µ—Ç–æ–≤"
    
    comprehensive_test "cron-manager.sh" \
        "./scripts/cron-manager.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ cron"
    
    comprehensive_test "process-monitor.sh" \
        "./scripts/process-monitor.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
    
    comprehensive_test "log-analyzer.sh" \
        "./scripts/log-analyzer.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –ª–æ–≥–æ–≤"
    
    comprehensive_test "firewall-manager.sh" \
        "./scripts/firewall-manager.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ñ–∞–µ—Ä–≤–æ–ª–∞"
    
    comprehensive_test "metrics-collector.sh" \
        "./scripts/metrics-collector.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä—â–∏–∫–∞ –º–µ—Ç—Ä–∏–∫"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Git –ø–æ–º–æ—â–Ω–∏–∫–∞
test_git_helper() {
    comprehensive_test "git-helper.sh" \
        "./scripts/git-helper.sh --help" \
        "–ü—Ä–æ–≤–µ—Ä–∫–∞ Git –ø–æ–º–æ—â–Ω–∏–∫–∞"
    
    test_script "git-helper.sh" "status" \
        "./scripts/git-helper.sh status" \
        "–°—Ç–∞—Ç—É—Å Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è"
    
    test_script "git-helper.sh" "info" \
        "./scripts/git-helper.sh info" \
        "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞
test_installer() {
    if [ -f "./bootstrap.sh" ]; then
        comprehensive_test "bootstrap.sh" \
            "./bootstrap.sh --help" \
            "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞"
        
        test_syntax "bootstrap.sh"
        test_shellcheck "bootstrap.sh"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
test_permissions() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤..."
    
    local invalid_permissions=0
    
    for script in ./scripts/*.sh; do
        if [ -f "$script" ]; then
            if [ ! -x "$script" ]; then
                print_error "‚ùå $(basename "$script"): –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
                chmod +x "$script"
                print_warning "  üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"
                ((invalid_permissions++))
            fi
        fi
    done
    
    if [ $invalid_permissions -eq 0 ]; then
        print_success "‚úÖ –í—Å–µ —Å–∫—Ä–∏–ø—Ç—ã –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"
    else
        print_warning "‚ö†Ô∏è  –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è $invalid_permissions —Å–∫—Ä–∏–ø—Ç–æ–≤"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
test_dependencies() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    
    local dependencies=(
        "bash" "awk" "grep" "sed" "cut" "sort" "uniq"
        "curl" "wget" "git" "sudo" "systemctl" "journalctl"
        "ps" "top" "free" "df" "du" "find" "tar" "gzip"
        "ping" "ip" "ss" "netstat" "lsof" "uptime" "who"
    )
    
    local missing_deps=0
    
    for dep in "${dependencies[@]}"; do
        if command -v "$dep" &> /dev/null; then
            echo -e "  ${GREEN}‚úÖ $dep${NC}"
        else
            echo -e "  ${RED}‚ùå $dep${NC}"
            ((missing_deps++))
        fi
    done
    
    if [ $missing_deps -eq 0 ]; then
        print_success "‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        print_warning "‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç $missing_deps –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç
test_optional_dependencies() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç..."
    
    local optional_deps=(
        "shellcheck" "smartctl" "iotop" "htop" "ncdu" "tree"
        "nmap" "sensors" "docker" "docker-compose" "jq" "bc"
        "rsync" "rclone" "fail2ban-server" "ufw" "clamscan"
    )
    
    local available_deps=0
    
    for dep in "${optional_deps[@]}"; do
        if command -v "$dep" &> /dev/null; then
            echo -e "  ${GREEN}‚úÖ $dep${NC}"
            ((available_deps++))
        else
            echo -e "  ${YELLOW}‚ö†Ô∏è  $dep${NC}"
        fi
    done
    
    print_info "–î–æ—Å—Ç—É–ø–Ω–æ $available_deps –∏–∑ ${#optional_deps[@]} –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
test_configs() {
    print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    
    local config_files=(
        "configs/system-monitor.conf"
        "configs/alert.conf" 
        "configs/backup.conf"
        "configs/ssl-domains.conf"
        "configs/service-manager.conf"
        "configs/user-manager.conf"
    )
    
    local missing_configs=0
    
    for config in "${config_files[@]}"; do
        if [ -f "$config" ]; then
            echo -e "  ${GREEN}‚úÖ $(basename "$config")${NC}"
        else
            echo -e "  ${YELLOW}‚ö†Ô∏è  $(basename "$config")${NC}"
            ((missing_configs++))
        fi
    done
    
    if [ $missing_configs -eq 0 ]; then
        print_success "‚úÖ –í—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç"
    else
        print_warning "‚ö†Ô∏è  –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç $missing_configs –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
        print_info "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç—ã —Å –∫–æ–º–∞–Ω–¥–æ–π 'config' –¥–ª—è –∏—Ö —Å–æ–∑–¥–∞–Ω–∏—è"
    fi
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
generate_report() {
    print_info "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞..."
    
    local success_rate=$((PASSED_TESTS * 100 / TOTAL_TESTS))
    
    cat > "$REPORT_FILE" << EOF
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–û—Ç—á–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - System Admin Portfolio</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .header { background: #f4f4f4; padding: 20px; border-radius: 5px; }
        .summary { margin: 20px 0; }
        .test-result { margin: 10px 0; padding: 10px; border-left: 4px solid; }
        .passed { border-color: #28a745; background: #f8fff9; }
        .failed { border-color: #dc3545; background: #fff8f8; }
        .skipped { border-color: #ffc107; background: #fffef0; }
        .stats { display: grid; grid-template-columns: repeat(4, 1fr); gap: 10px; margin: 20px 0; }
        .stat-card { padding: 15px; text-align: center; border-radius: 5px; color: white; }
        .total { background: #17a2b8; }
        .passed-stat { background: #28a745; }
        .failed-stat { background: #dc3545; }
        .success-rate { background: #6f42c1; }
    </style>
</head>
<body>
    <div class="header">
        <h1>üß™ –û—Ç—á–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã</h1>
        <p><strong>–ü—Ä–æ–µ–∫—Ç:</strong> System Admin Portfolio</p>
        <p><strong>–î–∞—Ç–∞:</strong> $(date)</p>
        <p><strong>–í–µ—Ä—Å–∏—è:</strong> 2.0</p>
    </div>
    
    <div class="stats">
        <div class="stat-card total">
            <h3>–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤</h3>
            <p style="font-size: 24px; margin: 0;">$TOTAL_TESTS</p>
        </div>
        <div class="stat-card passed-stat">
            <h3>–ü—Ä–æ–π–¥–µ–Ω–æ</h3>
            <p style="font-size: 24px; margin: 0;">$PASSED_TESTS</p>
        </div>
        <div class="stat-card failed-stat">
            <h3>–ù–µ –ø—Ä–æ–π–¥–µ–Ω–æ</h3>
            <p style="font-size: 24px; margin: 0;">$FAILED_TESTS</p>
        </div>
        <div class="stat-card success-rate">
            <h3>–£—Å–ø–µ—à–Ω–æ—Å—Ç—å</h3>
            <p style="font-size: 24px; margin: 0;">${success_rate}%</p>
        </div>
    </div>
    
    <div class="summary">
        <h2>–†–µ–∑—é–º–µ</h2>
        <p>–°–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∏–ª–∞ –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.</p>
        <p><strong>–õ–æ–≥ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</strong> $LOG_FILE</p>
    </div>
    
    <div>
        <h2>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>
        <ul>
EOF

    if [ $FAILED_TESTS -gt 0 ]; then
        echo "<li>‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</li>" >> "$REPORT_FILE"
    fi
    
    if [ $success_rate -lt 80 ]; then
        echo "<li>‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–ª—É—á—à–∏—Ç—å –ø–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏</li>" >> "$REPORT_FILE"
    fi
    
    cat >> "$REPORT_FILE" << EOF
            <li>‚úÖ –†–µ–≥—É–ª—è—Ä–Ω–æ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π</li>
            <li>üìö –ò–∑—É—á–∏—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º</li>
        </ul>
    </div>
</body>
</html>
EOF

    print_success "–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: $REPORT_FILE"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
main() {
    print_header
    
    echo "–ù–∞—á–∞–ª–æ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã..."
    echo "–õ–æ–≥–∏: $LOG_FILE"
    echo ""
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    TOTAL_TESTS=0
    PASSED_TESTS=0
    FAILED_TESTS=0
    SKIPPED_TESTS=0
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç—ã
    test_permissions
    echo ""
    
    test_dependencies
    echo ""
    
    test_optional_dependencies
    echo ""
    
    test_configs
    echo ""
    
    print_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤..."
    echo "======================================"
    
    test_system_monitor
    test_service_manager
    test_user_manager
    test_alert_system
    test_backup_manager
    test_security_audit
    test_network_tools
    test_disk_tools
    test_docker_tools
    test_utility_tools
    test_git_helper
    test_installer
    
    # –ò—Ç–æ–≥–∏
    echo ""
    echo "üß™ –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:"
    echo "====================="
    echo -e "üìä –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL_TESTS"
    echo -e "${GREEN}‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: $PASSED_TESTS${NC}"
    echo -e "${RED}‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω–æ: $FAILED_TESTS${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: $SKIPPED_TESTS${NC}"
    
    local success_rate=0
    if [ $TOTAL_TESTS -gt 0 ]; then
        success_rate=$((PASSED_TESTS * 100 / TOTAL_TESTS))
    fi
    echo -e "üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${success_rate}%"
    
    echo ""
    echo "üìù –ü–æ–¥—Ä–æ–±–Ω—ã–π –ª–æ–≥: $LOG_FILE"
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    generate_report
    
    echo ""
    echo "üìã HTML –æ—Ç—á–µ—Ç: $REPORT_FILE"
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥ –≤—ã—Ö–æ–¥–∞
    if [ $FAILED_TESTS -gt 0 ]; then
        print_error "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏"
        exit 1
    else
        print_success "–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
        exit 0
    fi
}

# –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
quick_test() {
    print_header
    echo "‚ö° –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤..."
    echo ""
    
    test_system_monitor
    test_service_manager
    test_user_manager
    test_alert_system
    test_git_helper
    
    echo ""
    echo "üß™ –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
    echo -e "${GREEN}‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: $PASSED_TESTS${NC}"
    echo -e "${RED}‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω–æ: $FAILED_TESTS${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
syntax_check() {
    print_header
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤—Å–µ—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤..."
    echo ""
    
    local syntax_errors=0
    
    for script in ./scripts/*.sh; do
        if [ -f "$script" ]; then
            if ! test_syntax "$(basename "$script")"; then
                ((syntax_errors++))
            fi
        fi
    done
    
    if [ -f "./bootstrap.sh" ]; then
        if ! test_syntax "bootstrap.sh"; then
            ((syntax_errors++))
        fi
    fi
    
    echo ""
    if [ $syntax_errors -eq 0 ]; then
        print_success "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –≤—Å–µ—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
    else
        print_error "‚ùå –ù–∞–π–¥–µ–Ω–æ $syntax_errors –æ—à–∏–±–æ–∫ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"
        exit 1
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
show_help() {
    print_header
    echo -e "${CYAN}–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]${NC}"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  full       - –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo "  quick      - –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤"
    echo "  syntax     - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"
    echo "  deps       - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    echo "  help       - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0          # –ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
    echo "  $0 quick    # –ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
    echo "  $0 syntax   # –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"
    echo ""
    echo "–§–∞–π–ª—ã:"
    echo "  –õ–æ–≥–∏: $LOG_DIR/script-tests.log"
    echo "  –û—Ç—á–µ—Ç—ã: $REPORTS_DIR/test-report-*.html"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-full}" in
    "full")
        main
        ;;
    "quick")
        quick_test
        ;;
    "syntax")
        syntax_check
        ;;
    "deps")
        test_dependencies
        test_optional_dependencies
        ;;
    "help"|"--help"|"-h")
        show_help
        ;;
    *)
        print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        show_help
        exit 1
        ;;
esac
