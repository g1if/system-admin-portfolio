#!/bin/bash
# üîê –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ SSL/TLS —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–æ–º–µ–Ω–æ–≤
# –ê–≤—Ç–æ—Ä: g1if
# –í–µ—Ä—Å–∏—è: 2.0
# –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/g1if/system-admin-portfolio

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
LOG_DIR="$PROJECT_ROOT/logs"
CONFIG_DIR="$PROJECT_ROOT/configs"
SSL_DIR="$PROJECT_ROOT/ssl-reports"
REPORTS_DIR="$PROJECT_ROOT/reports"

mkdir -p "$LOG_DIR" "$CONFIG_DIR" "$SSL_DIR" "$REPORTS_DIR"

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
PURPLE='\033[0;35m'
MAGENTA='\033[0;35m'
NC='\033[0m'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SSL_CONFIG="$CONFIG_DIR/ssl-domains.conf"
SSL_REPORT="$SSL_DIR/ssl-report-$(date +%Y%m%d).log"
MAIN_LOG="$LOG_DIR/ssl-checker.log"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    local missing=()
    
    for cmd in openssl curl date grep awk sed; do
        if ! command -v "$cmd" &> /dev/null; then
            missing+=("$cmd")
        fi
    done
    
    if [ ${#missing[@]} -gt 0 ]; then
        echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã: ${missing[*]}"
        echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install ${missing[*]}"
        return 1
    fi
    
    return 0
}

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log() {
    local level=$1
    local message=$2
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    echo "[$timestamp] [$level] $message" >> "$MAIN_LOG"
}

print_header() {
    echo -e "${CYAN}"
    echo "üîê ==========================================="
    echo "   –ü–†–û–î–í–ò–ù–£–¢–´–ô SSL –ú–û–ù–ò–¢–û–†–ò–ù–ì v2.0"
    echo "   $(date)"
    echo "   –ê–≤—Ç–æ—Ä: g1if"
    echo "==========================================="
    echo -e "${NC}"
}

print_section() {
    echo -e "${BLUE}üìä $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${PURPLE}‚ÑπÔ∏è  $1${NC}"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
create_config() {
    cat > "$SSL_CONFIG" << 'EOF'
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è SSL –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ v2.0

# –°–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
# –§–æ—Ä–º–∞—Ç: domain[:port] (–ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 443)

DOMAINS=(
    "google.com"
    "github.com:443"
    "ubuntu.com"
    "microsoft.com:443"
    "letsencrypt.org"
    "cloudflare.com"
)

# –ü–æ—Ä–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–≤ –¥–Ω—è—Ö)
WARNING_DAYS=30
CRITICAL_DAYS=7
EXPIRY_ALERT_DAYS=60

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏
CHECK_INTERVAL_HOURS=24
TIMEOUT=10
VERIFY_CHAIN=true
CHECK_OCSP=false
CHECK_CIPHERS=true

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π
ALERT_ENABLED=true
ALERT_METHODS=("console" "log")  # console, log, email, telegram
ALERT_EMAIL=""
TELEGRAM_BOT_TOKEN=""
TELEGRAM_CHAT_ID=""

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—á–µ—Ç–æ–≤
REPORT_FORMAT="text"  # text, csv, json
REPORT_RETENTION_DAYS=30
AUTO_GENERATE_REPORT=true

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
ENABLE_DNS_CHECK=true
ENABLE_HTTP_CHECK=true
CHECK_ALTERNATIVE_NAMES=true
EOF
    print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: $SSL_CONFIG"
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
load_config() {
    if [ -f "$SSL_CONFIG" ]; then
        source "$SSL_CONFIG"
        log "INFO" "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ $SSL_CONFIG"
    else
        print_warning "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."
        DOMAINS=("google.com" "github.com")
        WARNING_DAYS=30
        CRITICAL_DAYS=7
        EXPIRY_ALERT_DAYS=60
        CHECK_INTERVAL_HOURS=24
        TIMEOUT=10
        ALERT_ENABLED=true
        ALERT_METHODS=("console" "log")
    fi
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π
send_alert() {
    local level=$1
    local message=$2
    local domain=${3:-""}
    
    if [ "$ALERT_ENABLED" != "true" ]; then
        return
    fi
    
    local full_message="[$level] $message"
    if [ -n "$domain" ]; then
        full_message="[$level] –î–æ–º–µ–Ω $domain: $message"
    fi
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ–≥–¥–∞
    log "$level" "$message"
    
    # Console –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
    if [[ " ${ALERT_METHODS[@]} " =~ " console " ]]; then
        case $level in
            "CRITICAL") print_error "$message" ;;
            "WARNING") print_warning "$message" ;;
            "INFO") print_info "$message" ;;
            *) echo "$message" ;;
        esac
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–æ–º–µ–Ω–∞
check_domain_availability() {
    local domain=$1
    local port=$2
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS
    if [ "$ENABLE_DNS_CHECK" = "true" ]; then
        if ! nslookup "$domain" &> /dev/null; then
            echo "DNS_FAIL"
            return 1
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ TCP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    if ! timeout "$TIMEOUT" bash -c "echo > /dev/tcp/$domain/$port" 2>/dev/null; then
        echo "TCP_FAIL"
        return 1
    fi
    
    echo "AVAILABLE"
    return 0
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ
get_certificate_details() {
    local domain=$1
    local port=$2
    
    local cert_info
    cert_info=$(timeout "$TIMEOUT" openssl s_client -connect "$domain:$port" -servername "$domain" -showcerts </dev/null 2>/dev/null)
    
    if [ -z "$cert_info" ]; then
        return 1
    fi
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    local subject=$(echo "$cert_info" | openssl x509 -noout -subject 2>/dev/null | sed 's/^subject=//')
    local issuer=$(echo "$cert_info" | openssl x509 -noout -issuer 2>/dev/null | sed 's/^issuer=//')
    local dates=$(echo "$cert_info" | openssl x509 -noout -dates 2>/dev/null)
    local not_before=$(echo "$dates" | grep "notBefore" | cut -d= -f2-)
    local not_after=$(echo "$dates" | grep "notAfter" | cut -d= -f2-)
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    local serial=$(echo "$cert_info" | openssl x509 -noout -serial 2>/dev/null | cut -d= -f2)
    local sig_algo=$(echo "$cert_info" | openssl x509 -noout -signature_algorithm 2>/dev/null)
    local pubkey_algo=$(echo "$cert_info" | openssl x509 -noout -pubkey 2>/dev/null | openssl pkey -pubin -text 2>/dev/null | grep "Public Key Algorithm" | head -1 | awk '{print $NF}')
    local key_size=$(echo "$cert_info" | openssl x509 -noout -pubkey 2>/dev/null | openssl pkey -pubin -text 2>/dev/null | grep "Public-Key:" | awk '{print $2}')
    local san=$(echo "$cert_info" | openssl x509 -noout -text 2>/dev/null | grep -A1 "Subject Alternative Name" | tail -1 | sed 's/DNS://g' | tr -d ' ' || echo "N/A")
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã –≤ timestamp
    local expire_timestamp=$(date -d "$not_after" +%s 2>/dev/null || echo "0")
    local current_timestamp=$(date +%s)
    local seconds_left=$((expire_timestamp - current_timestamp))
    local days_left=$((seconds_left / 86400))
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ø–æ—á–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    local chain_status="UNKNOWN"
    if [ "$VERIFY_CHAIN" = "true" ]; then
        if echo "$cert_info" | openssl verify -CAfile /etc/ssl/certs/ca-certificates.crt 2>/dev/null | grep -q "OK"; then
            chain_status="VALID"
        else
            chain_status="INVALID"
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —à–∏—Ñ—Ä–æ–≤
    local ciphers="N/A"
    if [ "$CHECK_CIPHERS" = "true" ]; then
        ciphers=$(timeout "$TIMEOUT" openssl s_client -connect "$domain:$port" -servername "$domain" -cipher ALL </dev/null 2>/dev/null | grep "Cipher" | head -1 | awk '{print $3}' || echo "N/A")
    fi
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º JSON —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    cat << EOF
{
    "domain": "$domain",
    "port": "$port",
    "subject": "$subject",
    "issuer": "$issuer",
    "serial": "$serial",
    "signature_algorithm": "$sig_algo",
    "public_key_algorithm": "$pubkey_algo",
    "key_size": "$key_size",
    "not_before": "$not_before",
    "not_after": "$not_after",
    "days_left": "$days_left",
    "san": "$san",
    "chain_status": "$chain_status",
    "ciphers": "$ciphers",
    "timestamp": "$(date -Iseconds)"
}
EOF
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
check_ssl_cert() {
    local domain=$1
    local port=${2:-443}
    
    # –†–∞–∑–¥–µ–ª—è–µ–º –¥–æ–º–µ–Ω –∏ –ø–æ—Ä—Ç –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ domain:port
    if [[ $domain == *":"* ]]; then
        port=${domain#*:}
        domain=${domain%:*}
    fi
    
    echo -e "\n${MAGENTA}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞: $domain:$port${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–æ–º–µ–Ω–∞
    local availability
    availability=$(check_domain_availability "$domain" "$port")
    
    case $availability in
        "DNS_FAIL")
            print_error "DNS –∑–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è"
            send_alert "ERROR" "DNS –∑–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è –¥–ª—è $domain" "$domain"
            return 1
            ;;
        "TCP_FAIL")
            print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å TCP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"
            send_alert "ERROR" "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å TCP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å $domain:$port" "$domain"
            return 1
            ;;
    esac
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ
    local cert_details
    cert_details=$(get_certificate_details "$domain" "$port")
    
    if [ -z "$cert_details" ]; then
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
        send_alert "ERROR" "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è $domain" "$domain"
        return 1
    fi
    
    # –ü–∞—Ä—Å–∏–º JSON
    local subject=$(echo "$cert_details" | grep '"subject"' | cut -d'"' -f4)
    local issuer=$(echo "$cert_details" | grep '"issuer"' | cut -d'"' -f4)
    local not_before=$(echo "$cert_details" | grep '"not_before"' | cut -d'"' -f4)
    local not_after=$(echo "$cert_details" | grep '"not_after"' | cut -d'"' -f4)
    local days_left=$(echo "$cert_details" | grep '"days_left"' | cut -d'"' -f4)
    local san=$(echo "$cert_details" | grep '"san"' | cut -d'"' -f4)
    local chain_status=$(echo "$cert_details" | grep '"chain_status"' | cut -d'"' -f4)
    local key_size=$(echo "$cert_details" | grep '"key_size"' | cut -d'"' -f4)
    local ciphers=$(echo "$cert_details" | grep '"ciphers"' | cut -d'"' -f4)
    
    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    echo "  üìÑ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: $(echo "$subject" | cut -d'=' -f2- | cut -d',' -f1)"
    echo "  üè¢ –ò–∑–¥–∞—Ç–µ–ª—å: $(echo "$issuer" | cut -d'=' -f2- | cut -d',' -f1)"
    echo "  üîë –†–∞–∑–º–µ—Ä –∫–ª—é—á–∞: $key_size –±–∏—Ç"
    echo "  üìÖ –í—ã–¥–∞–Ω: $not_before"
    echo "  üìÖ –ò—Å—Ç–µ–∫–∞–µ—Ç: $not_after"
    
    if [ "$san" != "N/A" ] && [ "$CHECK_ALTERNATIVE_NAMES" = "true" ]; then
        echo "  üåê –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏–º–µ–Ω–∞: $san"
    fi
    
    if [ "$chain_status" != "UNKNOWN" ]; then
        echo -n "  üîó –¶–µ–ø–æ—á–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤: "
        if [ "$chain_status" = "VALID" ]; then
            print_success "–í–ê–õ–ò–î–ù–ê"
        else
            print_error "–ù–ï–í–ê–õ–ò–î–ù–ê"
        fi
    fi
    
    if [ "$ciphers" != "N/A" ]; then
        echo "  üõ°Ô∏è  –ê–∫—Ç–∏–≤–Ω—ã–π —à–∏—Ñ—Ä: $ciphers"
    fi
    
    echo -n "  ‚è∞ –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: "
    
    local status="OK"
    if [ "$days_left" -lt 0 ]; then
        print_error "–ü–†–û–°–†–û–ß–ï–ù ($(( -days_left )) –¥–Ω–µ–π –Ω–∞–∑–∞–¥)"
        echo "    üö® –ù–ï–ú–ï–î–õ–ï–ù–ù–û –ó–ê–ú–ï–ù–ò–¢–ï –°–ï–†–¢–ò–§–ò–ö–ê–¢!"
        status="EXPIRED"
        send_alert "CRITICAL" "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ü–†–û–°–†–û–ß–ï–ù! $domain" "$domain"
    elif [ "$days_left" -le "$CRITICAL_DAYS" ]; then
        print_error "$days_left (–ö–†–ò–¢–ò–ß–ï–°–ö–ò)"
        echo "    ‚ö†Ô∏è  –°—Ä–æ—á–Ω–æ –∑–∞–º–µ–Ω–∏—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç!"
        status="CRITICAL"
        send_alert "CRITICAL" "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ $days_left –¥–Ω–µ–π: $domain" "$domain"
    elif [ "$days_left" -le "$WARNING_DAYS" ]; then
        print_warning "$days_left (–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï)"
        echo "    üí° –ó–∞–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –∑–∞–º–µ–Ω—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
        status="WARNING"
        send_alert "WARNING" "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ $days_left –¥–Ω–µ–π: $domain" "$domain"
    elif [ "$days_left" -le "$EXPIRY_ALERT_DAYS" ]; then
        print_info "$days_left"
        echo "    üìù –°–∫–æ—Ä–æ –∏—Å—Ç–µ–∫–∞–µ—Ç, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å"
        status="INFO"
    else
        print_success "$days_left"
        echo "    ‚úÖ –í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ"
    fi
    
    # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    echo "$(date '+%Y-%m-%d %H:%M:%S') | $domain:$port | $status | $days_left –¥–Ω–µ–π | –¥–æ $not_after | –¶–µ–ø–æ—á–∫–∞: $chain_status" >> "$SSL_REPORT"
    
    return 0
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤
check_all_domains() {
    print_section "–ü–†–û–í–ï–†–ö–ê SSL –°–ï–†–¢–ò–§–ò–ö–ê–¢–û–í"
    
    local total=0
    local problems=0
    local expired=0
    local critical=0
    local warning=0
    
    for domain_entry in "${DOMAINS[@]}"; do
        if check_ssl_cert "$domain_entry"; then
            ((total++))
        else
            ((total++))
            ((problems++))
        fi
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
        case $? in
            2) ((expired++)) ;;
            3) ((critical++)) ;;
            4) ((warning++)) ;;
        esac
        
        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
        sleep 1
    done
    
    echo ""
    echo "üìà –ò–¢–û–ì–ò –ü–†–û–í–ï–†–ö–ò:"
    echo "  üìä –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –¥–æ–º–µ–Ω–æ–≤: $total"
    echo "  üî¥ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ: $expired"
    echo "  üü† –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö: $critical"
    echo "  üü° –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $warning"
    echo "  üü¢ –ò—Å–ø—Ä–∞–≤–Ω—ã—Ö: $((total - expired - critical - warning))"
    echo "  üìÅ –û—Ç—á–µ—Ç: $SSL_REPORT"
    
    log "INFO" "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Å–µ–≥–æ: $total, –ü—Ä–æ–±–ª–µ–º—ã: $problems"
    
    return $problems
}

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞
add_domain() {
    local domain=$1
    local port=${2:-443}
    
    if [ -z "$domain" ]; then
        print_error "–£–∫–∞–∂–∏—Ç–µ –¥–æ–º–µ–Ω –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è"
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 add <domain> [port]"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –¥–æ–º–µ–Ω–∞
    if ! [[ $domain =~ ^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
        print_error "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–æ–º–µ–Ω–∞: $domain"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    if [ ! -f "$SSL_CONFIG" ]; then
        create_config
    fi
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–º–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    local domain_entry="$domain:$port"
    if ! grep -q "\"$domain:\?$port\\?\"" "$SSL_CONFIG" 2>/dev/null; then
        # –ë–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –º–∞—Å—Å–∏–≤
        sed -i "/^DOMAINS=(/a \\    \"$domain_entry\"" "$SSL_CONFIG"
        print_success "–î–æ–º–µ–Ω $domain_entry –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
        log "INFO" "–î–æ–±–∞–≤–ª–µ–Ω –¥–æ–º–µ–Ω: $domain_entry"
    else
        print_warning "–î–æ–º–µ–Ω $domain —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞
remove_domain() {
    local domain=$1
    
    if [ -z "$domain" ]; then
        print_error "–£–∫–∞–∂–∏—Ç–µ –¥–æ–º–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 remove <domain>"
        return 1
    fi
    
    if [ ! -f "$SSL_CONFIG" ]; then
        print_error "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    # –£–¥–∞–ª—è–µ–º –¥–æ–º–µ–Ω –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if sed -i "/\"$domain\"/d" "$SSL_CONFIG" 2>/dev/null; then
        print_success "–î–æ–º–µ–Ω $domain —É–¥–∞–ª–µ–Ω –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
        log "INFO" "–£–¥–∞–ª–µ–Ω –¥–æ–º–µ–Ω: $domain"
    else
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –¥–æ–º–µ–Ω $domain"
    fi
}

# –°–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤
list_domains() {
    print_section "–û–¢–°–õ–ï–ñ–ò–í–ê–ï–ú–´–ï –î–û–ú–ï–ù–´"
    
    if [ ${#DOMAINS[@]} -eq 0 ]; then
        echo "  ‚ÑπÔ∏è  –î–æ–º–µ–Ω—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        echo "  üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: $0 add <domain>"
        return
    fi
    
    for domain_entry in "${DOMAINS[@]}"; do
        echo "  üåê $domain_entry"
    done
    echo ""
    echo "  –í—Å–µ–≥–æ –¥–æ–º–µ–Ω–æ–≤: ${#DOMAINS[@]}"
}

# –†–µ–∂–∏–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitor_mode() {
    if ! check_dependencies; then
        print_error "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞"
        exit 1
    fi
    
    print_header
    echo "  üîç –ó–ê–ü–£–°–ö –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê SSL –°–ï–†–¢–ò–§–ò–ö–ê–¢–û–í"
    echo "  ‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: $CHECK_INTERVAL_HOURS —á–∞—Å–æ–≤"
    echo "  üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –¥–æ–º–µ–Ω—ã: ${#DOMAINS[@]}"
    echo "  üö® –ü–æ—Ä–æ–≥–∏: $WARNING_DAYS –¥–Ω–µ–π (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ), $CRITICAL_DAYS –¥–Ω–µ–π (–∫—Ä–∏—Ç–∏—á–Ω–æ)"
    echo ""
    echo "  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
    echo ""
    
    local counter=0
    while true; do
        counter=$((counter + 1))
        local check_time=$(date '+%Y-%m-%d %H:%M:%S')
        echo "======= –ü–†–û–í–ï–†–ö–ê #$counter ($check_time) ======="
        check_all_domains
        echo "=============================================="
        echo ""
        
        if [ $counter -eq 1 ]; then
            echo "‚è≥ –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ $CHECK_INTERVAL_HOURS —á–∞—Å–æ–≤..."
        fi
        
        sleep $((CHECK_INTERVAL_HOURS * 3600))
    done
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞
generate_report() {
    print_section "–†–ê–°–®–ò–†–ï–ù–ù–´–ô –û–¢–ß–ï–¢ –ü–û SSL –°–ï–†–¢–ò–§–ò–ö–ê–¢–ê–ú"
    
    local report_file="$REPORTS_DIR/ssl-detailed-report-$(date +%Y%m%d_%H%M%S).txt"
    
    {
        echo "–î–ï–¢–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ SSL –°–ï–†–¢–ò–§–ò–ö–ê–¢–û–í"
        echo "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: $(date)"
        echo "==========================================="
        echo ""
        
        if [ -f "$SSL_REPORT" ]; then
            echo "–ü–û–°–õ–ï–î–ù–ò–ï –ü–†–û–í–ï–†–ö–ò:"
            echo "-----------------"
            tail -10 "$SSL_REPORT" | while read -r line; do
                echo "$line"
            done
            echo ""
            
            echo "–°–¢–ê–¢–ò–°–¢–ò–ö–ê:"
            echo "----------"
            local total_checks=$(grep -c "|" "$SSL_REPORT" 2>/dev/null || echo "0")
            local expired=$(grep -c "EXPIRED" "$SSL_REPORT" 2>/dev/null || echo "0")
            local critical=$(grep -c "CRITICAL" "$SSL_REPORT" 2>/dev/null || echo "0")
            local warning=$(grep -c "WARNING" "$SSL_REPORT" 2>/dev/null || echo "0")
            local info=$(grep -c "INFO" "$SSL_REPORT" 2>/dev/null || echo "0")
            local ok=$(grep -c "OK" "$SSL_REPORT" 2>/dev/null || echo "0")
            
            echo "–í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: $total_checks"
            echo "üî¥ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ: $expired"
            echo "üü† –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö: $critical"
            echo "üü° –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $warning"
            echo "üîµ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö: $info"
            echo "üü¢ –ò—Å–ø—Ä–∞–≤–Ω—ã—Ö: $ok"
            echo ""
            
            # –ù–∞—Ö–æ–¥–∏–º –±–ª–∏–∂–∞–π—à–∏–µ –∏—Å—Ç–µ–∫–∞—é—â–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
            echo "–ë–õ–ò–ñ–ê–ô–®–ò–ï –ò–°–¢–ï–ß–ï–ù–ò–Ø:"
            echo "-------------------"
            grep -v "EXPIRED" "$SSL_REPORT" | sort -t'|' -k4 -n | head -5 | while read -r line; do
                local domain=$(echo "$line" | cut -d'|' -f2 | tr -d ' ')
                local days=$(echo "$line" | cut -d'|' -f4 | tr -d ' ' | cut -d' ' -f1)
                local expiry=$(echo "$line" | cut -d'|' -f5 | cut -d':' -f2-)
                echo "  $domain: $days –¥–Ω–µ–π (–¥–æ $expiry)"
            done
        else
            echo "–û—Ç—á–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É: $0 check"
        fi
        
    } > "$report_file"
    
    print_success "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $report_file"
    cat "$report_file"
}

# –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞
quick_check() {
    local domain=$1
    
    if [ -z "$domain" ]; then
        print_error "–£–∫–∞–∂–∏—Ç–µ –¥–æ–º–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 quick <domain>"
        return 1
    fi
    
    print_section "–ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê: $domain"
    check_ssl_cert "$domain"
}

# –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
validate_config() {
    print_section "–í–ê–õ–ò–î–ê–¶–ò–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò"
    
    if [ ! -f "$SSL_CONFIG" ]; then
        print_error "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if bash -n "$SSL_CONFIG" 2>/dev/null; then
        print_success "–°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
    else
        print_error "–û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–æ–º–µ–Ω–æ–≤
    if [ ${#DOMAINS[@]} -eq 0 ]; then
        print_warning "–ù–µ—Ç –¥–æ–º–µ–Ω–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    else
        print_success "–ù–∞—Å—Ç—Ä–æ–µ–Ω–æ –¥–æ–º–µ–Ω–æ–≤: ${#DOMAINS[@]}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    if [ "$WARNING_DAYS" -le "$CRITICAL_DAYS" ]; then
        print_error "WARNING_DAYS ($WARNING_DAYS) –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ CRITICAL_DAYS ($CRITICAL_DAYS)"
        return 1
    fi
    
    print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞"
    return 0
}

show_help() {
    print_header
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê] [–ü–ê–†–ê–ú–ï–¢–†–´]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  check              - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –¥–æ–º–µ–Ω—ã"
    echo "  monitor            - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è–º–∏"
    echo "  quick <domain>     - –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–Ω–æ–≥–æ –¥–æ–º–µ–Ω–∞"
    echo "  add <domain> [port]- –î–æ–±–∞–≤–∏—Ç—å –¥–æ–º–µ–Ω –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    echo "  remove <domain>    - –£–¥–∞–ª–∏—Ç—å –¥–æ–º–µ–Ω –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    echo "  list               - –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –¥–æ–º–µ–Ω–æ–≤"
    echo "  report             - –°–æ–∑–¥–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç"
    echo "  config             - –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
    echo "  validate           - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
    echo "  help               - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 check"
    echo "  $0 add example.com 443"
    echo "  $0 remove olddomain.com"
    echo "  $0 quick google.com"
    echo "  $0 monitor"
    echo "  $0 validate"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    load_config
    
    case "${1:-}" in
        "check")
            print_header
            check_all_domains
            ;;
        "monitor")
            monitor_mode
            ;;
        "quick")
            quick_check "$2"
            ;;
        "add")
            add_domain "$2" "$3"
            ;;
        "remove")
            remove_domain "$2"
            ;;
        "list")
            print_header
            list_domains
            ;;
        "report")
            print_header
            generate_report
            ;;
        "config")
            create_config
            ;;
        "validate")
            print_header
            validate_config
            ;;
        "help"|"--help"|"-h"|"")
            show_help
            ;;
        *)
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
            show_help
            exit 1
            ;;
    esac
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ openssl
if ! command -v openssl >/dev/null 2>&1; then
    print_error "OpenSSL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install openssl"
    exit 1
fi

main "$@"
