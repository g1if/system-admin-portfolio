#!/bin/bash
# üîê –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–æ–º–µ–Ω–æ–≤
# –ê–≤—Ç–æ—Ä: g1if

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
LOG_DIR="$PROJECT_ROOT/logs"
CONFIG_DIR="$PROJECT_ROOT/configs"
SSL_DIR="$PROJECT_ROOT/ssl-reports"

mkdir -p "$LOG_DIR" "$CONFIG_DIR" "$SSL_DIR"

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
PURPLE='\033[0;35m'
NC='\033[0m'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SSL_CONFIG="$CONFIG_DIR/ssl-domains.conf"
SSL_REPORT="$SSL_DIR/ssl-report-$(date +%Y%m%d).log"

# –§—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–æ–¥–∞
print_header() {
    echo -e "${CYAN}"
    echo "üîê ==========================================="
    echo "   –ú–û–ù–ò–¢–û–†–ò–ù–ì SSL –°–ï–†–¢–ò–§–ò–ö–ê–¢–û–í v1.0"
    echo "   $(date)"
    echo "   –ê–≤—Ç–æ—Ä: g1if"
    echo "==========================================="
    echo -e "${NC}"
}

print_section() {
    echo -e "${BLUE}üìä $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

show_help() {
    print_header
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  check      - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ –¥–æ–º–µ–Ω—ã"
    echo "  monitor    - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å –æ–ø–æ–≤–µ—â–µ–Ω–∏—è–º–∏"
    echo "  add        - –î–æ–±–∞–≤–∏—Ç—å –¥–æ–º–µ–Ω –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    echo "  list       - –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –¥–æ–º–µ–Ω–æ–≤"
    echo "  report     - –°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç"
    echo "  config     - –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
    echo "  help       - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 check"
    echo "  $0 add google.com"
    echo "  $0 monitor"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
create_config() {
    cat > "$SSL_CONFIG" << 'EOF'
# –°–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
# –§–æ—Ä–º–∞—Ç: domain[:port] (–ø–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 443)

DOMAINS=(
    "google.com"
    "github.com"
    "ubuntu.com"
    "microsoft.com"
    "letsencrypt.org"
)

# –ü–æ—Ä–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–≤ –¥–Ω—è—Ö)
WARNING_DAYS=30
CRITICAL_DAYS=7

# –ü—Ä–æ–≤–µ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ (—á–∞—Å–æ–≤) –≤ —Ä–µ–∂–∏–º–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
CHECK_INTERVAL_HOURS=24
EOF
    print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: $SSL_CONFIG"
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
load_config() {
    if [ -f "$SSL_CONFIG" ]; then
        source "$SSL_CONFIG"
    else
        print_warning "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."
        DOMAINS=("google.com" "github.com")
        WARNING_DAYS=30
        CRITICAL_DAYS=7
        CHECK_INTERVAL_HOURS=24
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
check_ssl_cert() {
    local domain=$1
    local port=${2:-443}
    
    # –†–∞–∑–¥–µ–ª—è–µ–º –¥–æ–º–µ–Ω –∏ –ø–æ—Ä—Ç –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ domain:port
    if [[ $domain == *":"* ]]; then
        port=${domain#*:}
        domain=${domain%:*}
    fi
    
    echo -e "\n${PURPLE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞: $domain:$port${NC}"
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º openssl –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    local cert_info
    cert_info=$(timeout 10s openssl s_client -connect "$domain:$port" -servername "$domain" -showcerts </dev/null 2>/dev/null | openssl x509 -noout -dates 2>/dev/null || true)
    
    if [ -z "$cert_info" ]; then
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
        return 1
    fi
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞—Ç—ã
    local not_before=$(echo "$cert_info" | grep "notBefore" | cut -d= -f2-)
    local not_after=$(echo "$cert_info" | grep "notAfter" | cut -d= -f2-)
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ timestamp
    local expire_timestamp=$(date -d "$not_after" +%s 2>/dev/null || echo "0")
    local current_timestamp=$(date +%s)
    
    if [ "$expire_timestamp" -eq 0 ]; then
        print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞—Ç—É –∏—Å—Ç–µ—á–µ–Ω–∏—è"
        return 1
    fi
    
    # –í—ã—á–∏—Å–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –¥–Ω–∏
    local seconds_left=$((expire_timestamp - current_timestamp))
    local days_left=$((seconds_left / 86400))
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ
    local cert_subject=$(timeout 10s openssl s_client -connect "$domain:$port" -servername "$domain" </dev/null 2>/dev/null | openssl x509 -noout -subject 2>/dev/null | cut -d= -f2- || echo "N/A")
    local cert_issuer=$(timeout 10s openssl s_client -connect "$domain:$port" -servername "$domain" </dev/null 2>/dev/null | openssl x509 -noout -issuer 2>/dev/null | cut -d= -f2- || echo "N/A")
    
    echo "  üìÑ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: $cert_subject"
    echo "  üè¢ –ò–∑–¥–∞—Ç–µ–ª—å: $cert_issuer"
    echo "  üìÖ –í—ã–¥–∞–Ω: $not_before"
    echo "  üìÖ –ò—Å—Ç–µ–∫–∞–µ—Ç: $not_after"
    echo -n "  ‚è∞ –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: "
    
    if [ "$days_left" -lt 0 ]; then
        print_error "–ü–†–û–°–†–û–ß–ï–ù ($(( -days_left )) –¥–Ω–µ–π –Ω–∞–∑–∞–¥)"
        echo "    üö® –ù–ï–ú–ï–î–õ–ï–ù–ù–û –ó–ê–ú–ï–ù–ò–¢–ï –°–ï–†–¢–ò–§–ò–ö–ê–¢!"
    elif [ "$days_left" -le "$CRITICAL_DAYS" ]; then
        print_error "$days_left (–ö–†–ò–¢–ò–ß–ï–°–ö–ò)"
        echo "    ‚ö†Ô∏è  –°—Ä–æ—á–Ω–æ –∑–∞–º–µ–Ω–∏—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç!"
    elif [ "$days_left" -le "$WARNING_DAYS" ]; then
        print_warning "$days_left (–ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï)"
        echo "    üí° –ó–∞–ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –∑–∞–º–µ–Ω—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
    else
        print_success "$days_left"
        echo "    ‚úÖ –í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ"
    fi
    
    # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    local status
    if [ "$days_left" -lt 0 ]; then
        status="EXPIRED"
    elif [ "$days_left" -le "$CRITICAL_DAYS" ]; then
        status="CRITICAL"
    elif [ "$days_left" -le "$WARNING_DAYS" ]; then
        status="WARNING"
    else
        status="OK"
    fi
    
    echo "$(date '+%Y-%m-%d %H:%M:%S') | $domain:$port | $status | $days_left –¥–Ω–µ–π | –¥–æ $not_after" >> "$SSL_REPORT"
    
    return 0
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤
check_all_domains() {
    print_section "–ü–†–û–í–ï–†–ö–ê SSL –°–ï–†–¢–ò–§–ò–ö–ê–¢–û–í"
    
    local total=0
    local problems=0
    
    for domain_entry in "${DOMAINS[@]}"; do
        if check_ssl_cert "$domain_entry"; then
            ((total++))
        else
            ((total++))
            ((problems++))
        fi
    done
    
    echo ""
    echo "üìà –ò–¢–û–ì–ò:"
    echo "  üìä –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –¥–æ–º–µ–Ω–æ–≤: $total"
    echo "  ‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–Ω—ã—Ö: $problems"
    echo "  üìÅ –û—Ç—á–µ—Ç: $SSL_REPORT"
}

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–æ–º–µ–Ω–∞
add_domain() {
    local domain=$1
    local port=${2:-443}
    
    if [ -z "$domain" ]; then
        print_error "–£–∫–∞–∂–∏—Ç–µ –¥–æ–º–µ–Ω –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è"
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 add <domain> [port]"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –¥–æ–º–µ–Ω–∞
    if ! [[ $domain =~ ^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
        print_error "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–æ–º–µ–Ω–∞: $domain"
        return 1
    fi
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–º–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if ! grep -q "\"$domain\"" "$SSL_CONFIG" 2>/dev/null; then
        # –£–±–∏—Ä–∞–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É, –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–º–µ–Ω –∏ —Å–Ω–æ–≤–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Å–∫–æ–±–∫—É
        sed -i "/^DOMAINS=(/a \\\"$domain:$port\\\"" "$SSL_CONFIG"
        print_success "–î–æ–º–µ–Ω $domain:$port –¥–æ–±–∞–≤–ª–µ–Ω –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
    else
        print_warning "–î–æ–º–µ–Ω $domain —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    fi
}

# –°–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤
list_domains() {
    print_section "–û–¢–°–õ–ï–ñ–ò–í–ê–ï–ú–´–ï –î–û–ú–ï–ù–´"
    
    if [ ${#DOMAINS[@]} -eq 0 ]; then
        echo "  ‚ÑπÔ∏è  –î–æ–º–µ–Ω—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        echo "  üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: $0 add <domain>"
        return
    fi
    
    for domain_entry in "${DOMAINS[@]}"; do
        echo "  üåê $domain_entry"
    done
    echo ""
    echo "  –í—Å–µ–≥–æ –¥–æ–º–µ–Ω–æ–≤: ${#DOMAINS[@]}"
}

# –†–µ–∂–∏–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitor_mode() {
    print_header
    echo "  üîç –ó–ê–ü–£–°–ö –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê SSL –°–ï–†–¢–ò–§–ò–ö–ê–¢–û–í"
    echo "  ‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: $CHECK_INTERVAL_HOURS —á–∞—Å–æ–≤"
    echo "  üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –¥–æ–º–µ–Ω—ã: ${#DOMAINS[@]}"
    echo ""
    echo "  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
    echo ""
    
    while true; do
        local check_time=$(date '+%Y-%m-%d %H:%M:%S')
        echo "======= –ü–†–û–í–ï–†–ö–ê ($check_time) ======="
        check_all_domains
        echo "====================================="
        echo ""
        echo "‚è≥ –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ $CHECK_INTERVAL_HOURS —á–∞—Å–æ–≤..."
        sleep $((CHECK_INTERVAL_HOURS * 3600))
    done
}

# –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
generate_report() {
    print_section "–û–¢–ß–ï–¢ –ü–û SSL –°–ï–†–¢–ò–§–ò–ö–ê–¢–ê–ú"
    
    if [ -f "$SSL_REPORT" ]; then
        echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:"
        tail -20 "$SSL_REPORT"
        echo ""
        echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
        local total_checks=$(grep -c "|" "$SSL_REPORT" 2>/dev/null || echo "0")
        local expired=$(grep -c "EXPIRED" "$SSL_REPORT" 2>/dev/null || echo "0")
        local critical=$(grep -c "CRITICAL" "$SSL_REPORT" 2>/dev/null || echo "0")
        local warning=$(grep -c "WARNING" "$SSL_REPORT" 2>/dev/null || echo "0")
        
        echo "  –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: $total_checks"
        echo "  üî¥ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ: $expired"
        echo "  üü† –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö: $critical"
        echo "  üü° –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: $warning"
        echo "  üü¢ –ò—Å–ø—Ä–∞–≤–Ω—ã—Ö: $((total_checks - expired - critical - warning))"
    else
        echo "  ‚ÑπÔ∏è  –û—Ç—á–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        echo "  üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É: $0 check"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    load_config
    
    case "${1:-}" in
        "check")
            print_header
            check_all_domains
            ;;
        "monitor")
            monitor_mode
            ;;
        "add")
            add_domain "$2" "$3"
            ;;
        "list")
            print_header
            list_domains
            ;;
        "report")
            print_header
            generate_report
            ;;
        "config")
            create_config
            ;;
        "help"|"--help"|"-h"|"")
            show_help
            ;;
        *)
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
            show_help
            exit 1
            ;;
    esac
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ openssl
if ! command -v openssl >/dev/null 2>&1; then
    print_error "OpenSSL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install openssl"
    exit 1
fi

main "$@"
