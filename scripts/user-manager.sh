#!/bin/bash
# üë• –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –≥—Ä—É–ø–ø –∏ –ø–æ–ª–∏—Ç–∏–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
# –ê–≤—Ç–æ—Ä: g1if
# –í–µ—Ä—Å–∏—è: 2.0
# –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/g1if/system-admin-portfolio

set -e

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
LOG_DIR="$PROJECT_ROOT/logs"
CONFIG_DIR="$PROJECT_ROOT/configs"
REPORTS_DIR="$PROJECT_ROOT/reports"
LOG_FILE="$LOG_DIR/user-manager.log"
MAIN_CONFIG="$CONFIG_DIR/user-manager.conf"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p "$LOG_DIR" "$CONFIG_DIR" "$REPORTS_DIR"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    local missing=()
    
    for cmd in getent awk grep cut sort uniq date passwd chage usermod groupadd; do
        if ! command -v "$cmd" &> /dev/null; then
            missing+=("$cmd")
        fi
    done
    
    if [ ${#missing[@]} -gt 0 ]; then
        echo "‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã: ${missing[*]}"
        return 1
    fi
    
    return 0
}

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log() {
    local level=$1
    local message=$2
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    echo "[$timestamp] [$level] $message" >> "$LOG_FILE"
    
    # –¢–∞–∫–∂–µ –≤—ã–≤–æ–¥–∏–º –≤ –∫–æ–Ω—Å–æ–ª—å –µ—Å–ª–∏ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    if [ "$MONITOR_MODE" != "true" ]; then
        case $level in
            "ERROR") echo -e "${RED}[ERROR] $message${NC}" ;;
            "WARN") echo -e "${YELLOW}[WARN] $message${NC}" ;;
            "INFO") echo -e "${BLUE}[INFO] $message${NC}" ;;
            *) echo "[$level] $message" ;;
        esac
    fi
}

print_header() {
    echo -e "${MAGENTA}"
    echo "üë• ==========================================="
    echo "   –ü–†–û–î–í–ò–ù–£–¢–´–ô –ú–ï–ù–ï–î–ñ–ï–† –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô v2.0"
    echo "   $(date)"
    echo "   –ê–≤—Ç–æ—Ä: g1if"
    echo "==========================================="
    echo -e "${NC}"
}

print_section() {
    echo -e "${BLUE}üë§ $1${NC}"
}

print_status() {
    local status=$1
    local message=$2
    case $status in
        "OK") echo -e "  ${GREEN}‚úÖ $message${NC}" ;;
        "WARN") echo -e "  ${YELLOW}‚ö†Ô∏è  $message${NC}" ;;
        "ERROR") echo -e "  ${RED}‚ùå $message${NC}" ;;
        "INFO") echo -e "  ${BLUE}‚ÑπÔ∏è  $message${NC}" ;;
        "CRITICAL") echo -e "  ${RED}üö® $message${NC}" ;;
    esac
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
create_config() {
    cat > "$MAIN_CONFIG" << 'EOF'
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π v2.0

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞—É–¥–∏—Ç–∞
AUDIT_SYSTEM_USERS=true
AUDIT_PRIVILEGED_GROUPS=true
CHECK_PASSWORD_POLICY=true
CHECK_ACCOUNT_SECURITY=true
CHECK_SESSION_SECURITY=true

# –ü—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
PRIVILEGED_GROUPS=("sudo" "wheel" "root" "adm" "staff" "docker" "lxd")

# –ü–æ—Ä–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
PASSWORD_MAX_DAYS_WARN=90
PASSWORD_MIN_DAYS_WARN=0
INACTIVE_DAYS_WARN=90
LAST_LOGIN_DAYS_WARN=180

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
CHECK_EMPTY_PASSWORDS=true
CHECK_UID_0_USERS=true
CHECK_HOME_PERMISSIONS=true
CHECK_SUDO_ACCESS=true

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç—á–µ—Ç–æ–≤
REPORT_ENABLED=true
REPORT_RETENTION_DAYS=30
AUTO_GENERATE_REPORT=true

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
ENABLE_SESSION_MONITORING=false
LOG_RETENTION_DAYS=30
CHECK_DEPENDENCIES=true
EOF
    print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: $MAIN_CONFIG"
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
load_config() {
    if [ -f "$MAIN_CONFIG" ]; then
        source "$MAIN_CONFIG"
        log "INFO" "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ $MAIN_CONFIG"
    else
        log "WARN" "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."
        # –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        PRIVILEGED_GROUPS=("sudo" "wheel" "root" "adm" "staff")
        PASSWORD_MAX_DAYS_WARN=90
        INACTIVE_DAYS_WARN=90
        LAST_LOGIN_DAYS_WARN=180
        CHECK_EMPTY_PASSWORDS=true
        CHECK_UID_0_USERS=true
        CHECK_SUDO_ACCESS=true
    fi
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π
send_alert() {
    local level=$1
    local message=$2
    local user=${3:-""}
    
    local full_message="[$level] $message"
    if [ -n "$user" ]; then
        full_message="[$level] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $user: $message"
    fi
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ–≥–¥–∞
    log "$level" "$message"
    
    # Console –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
    case $level in
        "CRITICAL") print_status "CRITICAL" "$message" ;;
        "ERROR") print_status "ERROR" "$message" ;;
        "WARN") print_status "WARN" "$message" ;;
        "INFO") print_status "INFO" "$message" ;;
    esac
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
get_users_info() {
    print_section "–î–ï–¢–ê–õ–¨–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–•"
    
    local total_users=0
    local system_users=0
    local regular_users=0
    local locked_users=0
    
    if ! command -v getent >/dev/null 2>&1; then
        print_status "ERROR" "–ö–æ–º–∞–Ω–¥–∞ getent –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        return 1
    fi
    
    # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    total_users=$(getent passwd | wc -l)
    system_users=$(getent passwd | grep -E ":/bin/false|/usr/sbin/nologin|:/sbin/nologin" | wc -l)
    regular_users=$((total_users - system_users))
    
    # –ü–æ–¥—Å—á–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if [ -r /etc/shadow ]; then
        locked_users=$(awk -F: '($2 ~ /^\!/ || $2 ~ /^\*/) && $2 != "" {print $1}' /etc/shadow | wc -l)
    fi
    
    echo "  üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
    echo "    –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $total_users"
    echo "    üë§ –û–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $regular_users"
    echo "    ‚öôÔ∏è  –°–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $system_users"
    echo "    üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö: $locked_users"
    
    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    echo ""
    echo "  üîê –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤—Ö–æ–¥—ã:"
    if command -v who >/dev/null 2>&1; then
        local active_users=$(who | wc -l)
        echo "    –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏: $active_users"
        who | head -3 | while read -r line; do
            echo "    üíª $line"
        done
    fi
    
    echo ""
    if command -v last >/dev/null 2>&1; then
        echo "    –ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤—Ö–æ–¥—ã:"
        last -n 5 | head -n -2 | while read -r line; do
            if [ -n "$line" ]; then
                echo "    üë§ $line"
            fi
        done
    else
        echo "    ‚ÑπÔ∏è  –ö–æ–º–∞–Ω–¥–∞ last –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å UID 0 (–∫—Ä–æ–º–µ root)
    if [ "$CHECK_UID_0_USERS" = "true" ]; then
        echo ""
        echo "  üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å UID 0:"
        local uid0_users=$(getent passwd | awk -F: '($3 == "0") {print $1}' | grep -v "^root$")
        if [ -n "$uid0_users" ]; then
            send_alert "CRITICAL" "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å UID 0: $uid0_users"
        else
            print_status "OK" "–¢–æ–ª—å–∫–æ root –∏–º–µ–µ—Ç UID 0"
        fi
    fi
}

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≥—Ä—É–ø–ø
get_groups_info() {
    print_section "–†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ì–†–£–ü–ü–ê–•"
    
    if ! command -v getent >/dev/null 2>&1; then
        print_status "ERROR" "–ö–æ–º–∞–Ω–¥–∞ getent –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        return 1
    fi
    
    local total_groups=$(getent group | wc -l)
    echo "  üìä –í—Å–µ–≥–æ –≥—Ä—É–ø–ø: $total_groups"
    
    # –ì—Ä—É–ø–ø—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    echo ""
    echo "  üë• –ì—Ä—É–ø–ø—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:"
    getent group | awk -F: '{if (NF == 4 && $4 != "") print $1 ": " $4}' | head -8 | while read -r group; do
        echo "    üìã $group"
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø
    if [ "$AUDIT_PRIVILEGED_GROUPS" = "true" ]; then
        echo ""
        echo "  üîê –ê—É–¥–∏—Ç –ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø:"
        for group in "${PRIVILEGED_GROUPS[@]}"; do
            if getent group "$group" >/dev/null 2>&1; then
                local members=$(getent group "$group" | cut -d: -f4)
                if [ -n "$members" ]; then
                    echo -n "    ‚ö†Ô∏è  $group: $members"
                    local member_count=$(echo "$members" | tr ',' '\n' | wc -l)
                    echo " ($member_count –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)"
                    
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                    if [ "$group" = "sudo" ] || [ "$group" = "wheel" ]; then
                        echo "$members" | tr ',' '\n' | while read -r user; do
                            if [ "$user" != "root" ] && [ "$user" != "$SUDO_USER" ]; then
                                local user_uid=$(id -u "$user" 2>/dev/null)
                                if [ "$user_uid" -lt 1000 ] 2>/dev/null; then
                                    send_alert "WARN" "–°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $user –≤ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ $group"
                                fi
                            fi
                        done
                    fi
                else
                    echo "    ‚úÖ $group: –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
                fi
            fi
        done
    fi
}

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—å–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏
check_password_policy() {
    print_section "–†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–û–õ–ò–¢–ò–ö–ò –ü–ê–†–û–õ–ï–ô"
    
    local has_issues=0
    
    if [ -f /etc/login.defs ]; then
        local pass_max_days=$(grep "^PASS_MAX_DAYS" /etc/login.defs | awk '{print $2}' | head -1)
        local pass_min_days=$(grep "^PASS_MIN_DAYS" /etc/login.defs | awk '{print $2}' | head -1)
        local pass_warn_age=$(grep "^PASS_WARN_AGE" /etc/login.defs | awk '{print $2}' | head -1)
        
        echo "  ‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ /etc/login.defs:"
        echo "    –ú–∞–∫—Å. –¥–Ω–µ–π –ø–∞—Ä–æ–ª—è: ${pass_max_days:-–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ}"
        echo "    –ú–∏–Ω. –¥–Ω–µ–π –ø–∞—Ä–æ–ª—è: ${pass_min_days:-–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ}"
        echo "    –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ –¥–Ω–µ–π: ${pass_warn_age:-–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ}"
        
        if [ -n "$pass_max_days" ] && [ "$pass_max_days" -gt "$PASSWORD_MAX_DAYS_WARN" ] 2>/dev/null; then
            send_alert "WARN" "–°–ª–∏—à–∫–æ–º –¥–æ–ª–≥–∏–π —Å—Ä–æ–∫ –∂–∏–∑–Ω–∏ –ø–∞—Ä–æ–ª—è (>$PASSWORD_MAX_DAYS_WARN –¥–Ω–µ–π)"
            has_issues=1
        fi
        
        if [ -n "$pass_min_days" ] && [ "$pass_min_days" -eq 0 ] 2>/dev/null; then
            send_alert "WARN" "–ú–∏–Ω. –¥–Ω–µ–π –ø–∞—Ä–æ–ª—è —Ä–∞–≤–µ–Ω 0 - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –º–µ–Ω—è—Ç—å –ø–∞—Ä–æ–ª—å —Å—Ä–∞–∑—É"
            has_issues=1
        fi
    else
        echo "  ‚ÑπÔ∏è  –§–∞–π–ª login.defs –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª–µ–π –≤ PAM
    echo ""
    echo "  üîí –ü–æ–ª–∏—Ç–∏–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª–µ–π:"
    local pam_files=("/etc/pam.d/common-password" "/etc/pam.d/system-auth" "/etc/pam.d/password-auth")
    local found_policy=0
    
    for pam_file in "${pam_files[@]}"; do
        if [ -f "$pam_file" ]; then
            if grep -q "pam_pwquality" "$pam_file" 2>/dev/null || grep -q "pam_cracklib" "$pam_file" 2>/dev/null; then
                print_status "OK" "–ü–æ–ª–∏—Ç–∏–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª–µ–π –≤–∫–ª—é—á–µ–Ω–∞ ($pam_file)"
                found_policy=1
                break
            fi
        fi
    done
    
    if [ "$found_policy" -eq 0 ]; then
        send_alert "WARN" "–ü–æ–ª–∏—Ç–∏–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª–µ–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
        has_issues=1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø–∞—Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if command -v chage >/dev/null 2>&1 && [ -r /etc/shadow ]; then
        echo ""
        echo "  üìÖ –°—Ä–æ–∫–∏ –¥–µ–π—Å—Ç–≤–∏—è –ø–∞—Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:"
        getent passwd | while IFS=: read -r username _ uid _ _ home shell; do
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if [ "$uid" -ge 1000 ] || [ "$uid" -eq 0 ]; then
                local last_change=$(chage -l "$username" 2>/dev/null | grep "Last password change" | cut -d: -f2)
                local expires=$(chage -l "$username" 2>/dev/null | grep "Password expires" | cut -d: -f2)
                
                if echo "$expires" | grep -q "never"; then
                    echo "    ‚ö†Ô∏è  $username: –ø–∞—Ä–æ–ª—å –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å—Ç–µ–∫–∞–µ—Ç"
                elif echo "$expires" | grep -q "password must be changed"; then
                    echo "    üö® $username: —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è"
                fi
            fi
        done | head -5
    fi
    
    return $has_issues
}

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
check_accounts() {
    print_section "–†–ê–°–®–ò–†–ï–ù–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –£–ß–ï–¢–ù–´–• –ó–ê–ü–ò–°–ï–ô"
    
    local has_issues=0
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –±–µ–∑ –ø–∞—Ä–æ–ª—è
    if [ "$CHECK_EMPTY_PASSWORDS" = "true" ]; then
        echo "  üîç –ü–æ–∏—Å–∫ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –±–µ–∑ –ø–∞—Ä–æ–ª—è..."
        local empty_password_count=0
        
        if [ -r /etc/shadow ]; then
            while IFS=: read -r user pass; do
                if [ -z "$pass" ] || [ "$pass" = "!" ] || [ "$pass" = "*" ]; then
                    local uid=$(id -u "$user" 2>/dev/null)
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ—Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                    if [ "$uid" -ge 1000 ] || [ "$user" = "root" ]; then
                        echo "    üîì $user: –ø—É—Å—Ç–æ–π –ø–∞—Ä–æ–ª—å –∏–ª–∏ –≤—Ö–æ–¥ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
                        empty_password_count=$((empty_password_count + 1))
                    fi
                fi
            done < /etc/shadow
            
            if [ "$empty_password_count" -eq 0 ]; then
                print_status "OK" "–£—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –±–µ–∑ –ø–∞—Ä–æ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
            else
                send_alert "CRITICAL" "–ù–∞–π–¥–µ–Ω–æ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –±–µ–∑ –ø–∞—Ä–æ–ª—è: $empty_password_count"
                has_issues=1
            fi
        else
            echo "    ‚ÑπÔ∏è  –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ /etc/shadow"
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
    echo ""
    echo "  üìÖ –ü–æ–∏—Å–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π..."
    
    if command -v lastlog >/dev/null 2>&1; then
        local current_timestamp=$(date +%s)
        local warning_timestamp=$((current_timestamp - LAST_LOGIN_DAYS_WARN * 86400))
        
        lastlog | tail -n +2 | while read -r line; do
            local user=$(echo "$line" | awk '{print $1}')
            local last_login=$(echo "$line" | awk '{for(i=4;i<=NF;i++) printf $i" "; print ""}' | sed 's/ *$//')
            
            if [ "$last_login" != "**Never logged in**" ]; then
                local login_date=$(date -d "$last_login" +%s 2>/dev/null || echo "0")
                if [ "$login_date" -lt "$warning_timestamp" ] && [ "$login_date" -ne 0 ]; then
                    local days_ago=$(( (current_timestamp - login_date) / 86400 ))
                    echo "    ‚è∞ $user: –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥ $days_ago –¥–Ω–µ–π –Ω–∞–∑–∞–¥ ($last_login)"
                fi
            fi
        done | head -5
    else
        echo "    ‚ÑπÔ∏è  –ö–æ–º–∞–Ω–¥–∞ lastlog –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–∞—à–Ω–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    if [ "$CHECK_HOME_PERMISSIONS" = "true" ]; then
        echo ""
        echo "  üè† –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ–º–∞—à–Ω–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
        getent passwd | while IFS=: read -r username _ uid _ _ home shell; do
            if [ "$uid" -ge 1000 ] && [ -d "$home" ]; then
                local perms=$(stat -c "%A %U %G" "$home" 2>/dev/null)
                local owner=$(echo "$perms" | awk '{print $2}')
                local group=$(echo "$perms" | awk '{print $3}')
                
                if [ "$owner" != "$username" ]; then
                    echo "    ‚ö†Ô∏è  $username: –¥–æ–º–∞—à–Ω—è—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç $owner"
                fi
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–∞–≤ –∑–∞–ø–∏—Å–∏ —É –≥—Ä—É–ø–ø—ã/–¥—Ä—É–≥–∏—Ö
                if stat -c "%A" "$home" 2>/dev/null | grep -q "^d......w"; then
                    echo "    ‚ö†Ô∏è  $username: –≥—Ä—É–ø–ø–∞ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–æ –∑–∞–ø–∏—Å–∏ –≤ –¥–æ–º–∞—à–Ω—é—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é"
                fi
            fi
        done | head -3
    fi
    
    return $has_issues
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ sudo –¥–æ—Å—Ç—É–ø–∞
check_sudo_access() {
    if [ "$CHECK_SUDO_ACCESS" != "true" ]; then
        return
    fi
    
    print_section "–ü–†–û–í–ï–†–ö–ê SUDO –î–û–°–¢–£–ü–ê"
    
    if ! command -v sudo >/dev/null 2>&1; then
        echo "  ‚ÑπÔ∏è  Sudo –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return
    fi
    
    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å sudo –¥–æ—Å—Ç—É–ø–æ–º
    echo "  üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å sudo –¥–æ—Å—Ç—É–ø–æ–º:"
    
    # –ß–µ—Ä–µ–∑ –≥—Ä—É–ø–ø—É sudo/wheel
    for group in sudo wheel; do
        if getent group "$group" >/dev/null 2>&1; then
            local members=$(getent group "$group" | cut -d: -f4)
            if [ -n "$members" ]; then
                echo "    –ì—Ä—É–ø–ø–∞ $group: $members"
            fi
        fi
    done
    
    # –ß–µ—Ä–µ–∑ sudoers —Ñ–∞–π–ª—ã
    echo ""
    echo "  üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ sudoers:"
    if [ -f /etc/sudoers ]; then
        grep -v "^#" /etc/sudoers | grep -v "^$" | grep -v "^Defaults" | while read -r line; do
            if [ -n "$line" ]; then
                echo "    ‚öôÔ∏è  $line"
            fi
        done | head -5
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ sudoers.d
    if [ -d /etc/sudoers.d ]; then
        for file in /etc/sudoers.d/*; do
            if [ -f "$file" ] && [ -r "$file" ]; then
                local user_rules=$(grep -v "^#" "$file" | grep -v "^$" | grep -v "^Defaults" | head -2)
                if [ -n "$user_rules" ]; then
                    echo "    üìÅ $file:"
                    echo "$user_rules" | while read -r rule; do
                        echo "      ‚û°Ô∏è  $rule"
                    done
                fi
            fi
        done
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ —Å sudo)
create_test_user() {
    print_section "–°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø"
    
    if [ "$EUID" -ne 0 ]; then
        print_status "ERROR" "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ root"
        echo "  üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo $0 create-test"
        return 1
    fi
    
    local test_user="testuser_$(date +%s)"
    local test_password="TestPass123!_$(date +%s)"
    
    echo "  –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $test_user"
    
    if useradd -m -s /bin/bash -c "Test User for Security Audit" "$test_user" 2>/dev/null; then
        print_status "OK" "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $test_user —Å–æ–∑–¥–∞–Ω"
        echo "    üè† –î–æ–º–∞—à–Ω—è—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: /home/$test_user"
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å
        if echo "$test_user:$test_password" | chpasswd 2>/dev/null; then
            echo "    üîë –ü–∞—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $test_password"
        else
            print_status "WARN" "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å"
        fi
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –≥—Ä—É–ø–ø—É
        local test_group="testgroup_$(date +%s)"
        if groupadd "$test_group" 2>/dev/null; then
            echo "    üë• –ì—Ä—É–ø–ø–∞ $test_group —Å–æ–∑–¥–∞–Ω–∞"
            usermod -a -G "$test_group" "$test_user" 2>/dev/null && echo "    ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É"
        fi
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫—É –ø–∞—Ä–æ–ª—è
        if command -v chage >/dev/null 2>/dev/null; then
            chage -M 90 -m 7 -W 14 "$test_user" 2>/dev/null && echo "    ‚öôÔ∏è  –ü–æ–ª–∏—Ç–∏–∫–∞ –ø–∞—Ä–æ–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
        fi
        
        print_status "OK" "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
        echo ""
        echo "  üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:"
        echo "    sudo userdel -r $test_user"
        echo "    sudo groupdel $test_group 2>/dev/null || true"
        
        log "INFO" "–°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $test_user"
    else
        print_status "ERROR" "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        log "ERROR" "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    fi
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
generate_report() {
    local manager=$1
    local report_file="$REPORTS_DIR/user-report-$(date +%Y%m%d_%H%M%S).txt"
    
    print_section "–ì–ï–ù–ï–†–ê–¶–ò–Ø –û–¢–ß–ï–¢–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô"
    
    {
        echo "–û–¢–ß–ï–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –ò –ì–†–£–ü–ü"
        echo "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: $(date)"
        echo "–°–∏—Å—Ç–µ–º–∞: $(uname -a)"
        echo "==========================================="
        echo ""
        
        echo "–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:"
        echo "------------------------"
        if command -v getent >/dev/null 2>&1; then
            local total_users=$(getent passwd | wc -l)
            local system_users=$(getent passwd | grep -E ":/bin/false|/usr/sbin/nologin" | wc -l)
            local regular_users=$((total_users - system_users))
            
            echo "–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $total_users"
            echo "–û–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $regular_users"
            echo "–°–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $system_users"
        fi
        echo ""
        
        echo "–ü–†–ò–í–ò–õ–ï–ì–ò–†–û–í–ê–ù–ù–´–ï –ì–†–£–ü–ü–´:"
        echo "------------------------"
        for group in "${PRIVILEGED_GROUPS[@]}"; do
            if getent group "$group" >/dev/null 2>&1; then
                local members=$(getent group "$group" | cut -d: -f4)
                echo "$group: ${members:-–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π}"
            fi
        done
        echo ""
        
        echo "–ü–†–û–ë–õ–ï–ú–´ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò:"
        echo "---------------------"
        if [ -r /etc/shadow ]; then
            local empty_passwords=$(awk -F: '($2 == "" || $2 == "!" || $2 == "*") && $2 != "!!" {print $1}' /etc/shadow | wc -l)
            echo "–£—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –±–µ–∑ –ø–∞—Ä–æ–ª—è: $empty_passwords"
        fi
        
        local uid0_users=$(getent passwd | awk -F: '($3 == "0") {print $1}' | grep -v "^root$" | tr '\n' ' ')
        echo "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å UID 0 (–∫—Ä–æ–º–µ root): ${uid0_users:-–Ω–µ—Ç}"
        
    } > "$report_file"
    
    print_status "OK" "–û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $report_file"
    log "INFO" "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –æ—Ç—á–µ—Ç: $report_file"
    echo "$report_file"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    load_config
    
    if [ "$CHECK_DEPENDENCIES" = "true" ] && ! check_dependencies; then
        exit 1
    fi
    
    print_header
    log "INFO" "–ó–∞–ø—É—Å–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –∞—É–¥–∏—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    
    get_users_info
    get_groups_info
    
    if [ "$CHECK_PASSWORD_POLICY" = "true" ]; then
        check_password_policy
    fi
    
    if [ "$CHECK_ACCOUNT_SECURITY" = "true" ]; then
        check_accounts
    fi
    
    check_sudo_access
    
    # –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
    if [ "$AUTO_GENERATE_REPORT" = "true" ]; then
        echo ""
        generate_report > /dev/null
    fi
    
    echo ""
    print_status "OK" "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞—É–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω"
    log "INFO" "–ê—É–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω"
    echo ""
    echo -e "${CYAN}üìù –ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –≤ –ª–æ–≥–∞—Ö: $LOG_FILE${NC}"
}

# –ö–æ–º–∞–Ω–¥—ã
cmd_create_test() {
    create_test_user
}

cmd_list_users() {
    print_header
    get_users_info
}

cmd_list_groups() {
    print_header
    get_groups_info
}

cmd_check_security() {
    print_header
    load_config
    check_password_policy
    check_accounts
    check_sudo_access
}

cmd_report() {
    print_header
    generate_report
}

cmd_config() {
    create_config
}

cmd_monitor() {
    print_header
    echo "  üîç –†–ï–ñ–ò–ú –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô"
    echo "  ‚è∞ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥"
    echo "  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
    echo ""
    
    export MONITOR_MODE="true"
    local counter=0
    
    while true; do
        counter=$((counter + 1))
        clear
        print_header
        echo "  üìä –¶–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ #$counter ($(date '+%H:%M:%S'))"
        echo ""
        
        # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        echo "  üë• –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:"
        who | head -10 | while read -r line; do
            echo "    üíª $line"
        done
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø
        echo ""
        echo "  üîê –ü—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã:"
        for group in sudo wheel; do
            if getent group "$group" >/dev/null 2>&1; then
                local members=$(getent group "$group" | cut -d: -f4)
                echo "    ‚ö†Ô∏è  $group: $members"
            fi
        done
        
        echo ""
        echo "  ‚è≥ –°–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 30 —Å–µ–∫..."
        sleep 30
    done
    
    export MONITOR_MODE="false"
}

cmd_help() {
    print_header
    echo -e "${CYAN}üë• –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - –°–ø—Ä–∞–≤–∫–∞${NC}"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  create-test   - —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç—Ä–µ–±—É–µ—Ç sudo)"
    echo "  list-users    - –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö"
    echo "  list-groups   - –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥—Ä—É–ø–ø–∞—Ö"
    echo "  check-security- –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π"
    echo "  report        - –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞"
    echo "  config        - —Å–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª"
    echo "  monitor       - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "  help          - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
    echo ""
    echo "–ë–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤: –ø–æ–ª–Ω—ã–π —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞—É–¥–∏—Ç"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0                    # –ü–æ–ª–Ω—ã–π –∞—É–¥–∏—Ç"
    echo "  sudo $0 create-test   # –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    echo "  $0 list-users         # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö"
    echo "  $0 check-security     # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    echo "  $0 monitor            # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-}" in
    "create-test") cmd_create_test ;;
    "list-users") cmd_list_users ;;
    "list-groups") cmd_list_groups ;;
    "check-security") cmd_check_security ;;
    "report") cmd_report ;;
    "config") cmd_config ;;
    "monitor") cmd_monitor ;;
    "help"|"--help"|"-h") cmd_help ;;
    *) main ;;
esac
