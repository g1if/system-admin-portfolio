#!/bin/bash
# üë• –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –≥—Ä—É–ø–ø
# –ê–≤—Ç–æ—Ä: g1if
# –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/g1if/system-admin-portfolio

set -e

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
LOG_DIR="$PROJECT_ROOT/logs"
LOG_FILE="$LOG_DIR/user-manager.log"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p "$LOG_DIR" 2>/dev/null || true

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
MAGENTA='\033[0;35m'
NC='\033[0m' # No Color

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOG_FILE" 2>/dev/null || true
}

print_header() {
    echo -e "${MAGENTA}"
    echo "üë• ==========================================="
    echo "   –ú–ï–ù–ï–î–ñ–ï–† –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –ò –ì–†–£–ü–ü v1.0"
    echo "   $(date)"
    echo "   –ê–≤—Ç–æ—Ä: g1if"
    echo "==========================================="
    echo -e "${NC}"
}

print_section() {
    echo -e "${BLUE}üë§ $1${NC}"
}

print_status() {
    local status=$1
    local message=$2
    case $status in
        "OK") echo -e "  ${GREEN}‚úÖ $message${NC}" ;;
        "WARN") echo -e "  ${YELLOW}‚ö†Ô∏è  $message${NC}" ;;
        "ERROR") echo -e "  ${RED}‚ùå $message${NC}" ;;
        "INFO") echo -e "  ${BLUE}‚ÑπÔ∏è  $message${NC}" ;;
    esac
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
get_users_info() {
    print_section "–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø–•"
    
    local total_users=0
    local system_users=0
    local regular_users=0
    
    # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if command -v getent >/dev/null 2>&1; then
        total_users=$(getent passwd | wc -l)
        system_users=$(getent passwd | grep -E ":/bin/false|/usr/sbin/nologin" | wc -l)
        regular_users=$((total_users - system_users))
        
        echo "  üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $total_users"
        echo "  üë§ –û–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $regular_users"
        echo "  ‚öôÔ∏è  –°–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: $system_users"
        
        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        echo ""
        echo "  üîê –ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤–æ—à–µ–¥—à–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:"
        if command -v last >/dev/null 2>&1; then
            last -n 5 | head -n -2 | while read -r line; do
                if [ -n "$line" ]; then
                    echo "    üë§ $line"
                fi
            done
        else
            echo "    ‚ÑπÔ∏è  –ö–æ–º–∞–Ω–¥–∞ last –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
        fi
    else
        echo "  ‚ÑπÔ∏è  –ö–æ–º–∞–Ω–¥–∞ getent –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –ê–Ω–∞–ª–∏–∑ –≥—Ä—É–ø–ø
get_groups_info() {
    print_section "–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ì–†–£–ü–ü–ê–•"
    
    if command -v getent >/dev/null 2>&1; then
        local total_groups=$(getent group | wc -l)
        echo "  üìä –í—Å–µ–≥–æ –≥—Ä—É–ø–ø: $total_groups"
        
        echo ""
        echo "  üë• –ì—Ä—É–ø–ø—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:"
        getent group | awk -F: '{if (NF == 4 && $4 != "") print $1 ": " $4}' | head -5 | while read -r group; do
            echo "    üìã $group"
        done
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø
        echo ""
        echo "  üîê –ü—Ä–∏–≤–∏–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≥—Ä—É–ø–ø—ã:"
        local privileged_groups=("sudo" "wheel" "root" "adm" "staff")
        for group in "${privileged_groups[@]}"; do
            if getent group "$group" >/dev/null 2>&1; then
                local members=$(getent group "$group" | cut -d: -f4)
                echo "    ‚ö†Ô∏è  $group: $members"
            fi
        done
    else
        echo "  ‚ÑπÔ∏è  –ö–æ–º–∞–Ω–¥–∞ getent –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—å–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏
check_password_policy() {
    print_section "–ü–û–õ–ò–¢–ò–ö–ê –ü–ê–†–û–õ–ï–ô"
    
    if [ -f /etc/login.defs ]; then
        local pass_max_days=$(grep "^PASS_MAX_DAYS" /etc/login.defs | awk '{print $2}' | head -1)
        local pass_min_days=$(grep "^PASS_MIN_DAYS" /etc/login.defs | awk '{print $2}' | head -1)
        local pass_warn_age=$(grep "^PASS_WARN_AGE" /etc/login.defs | awk '{print $2}' | head -1)
        
        echo "  –ú–∞–∫—Å. –¥–Ω–µ–π –ø–∞—Ä–æ–ª—è: ${pass_max_days:-–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ}"
        echo "  –ú–∏–Ω. –¥–Ω–µ–π –ø–∞—Ä–æ–ª—è: ${pass_min_days:-–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ}"
        echo "  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ –¥–Ω–µ–π: ${pass_warn_age:-–ù–µ —É—Å—Ç–∞–Ω–æ–≤–µ–Ω–æ}"
        
        if [ -n "$pass_max_days" ] && [ "$pass_max_days" -gt 90 ] 2>/dev/null; then
            print_status "WARN" "–°–ª–∏—à–∫–æ–º –¥–æ–ª–≥–∏–π —Å—Ä–æ–∫ –∂–∏–∑–Ω–∏ –ø–∞—Ä–æ–ª—è (>90 –¥–Ω–µ–π)"
        fi
    else
        echo "  ‚ÑπÔ∏è  –§–∞–π–ª login.defs –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª–µ–π
    if [ -f /etc/pam.d/common-password ] || [ -f /etc/pam.d/system-auth ]; then
        echo "  üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª–µ–π..."
        if grep -q "pam_pwquality" /etc/pam.d/common-password 2>/dev/null || grep -q "pam_cracklib" /etc/pam.d/common-password 2>/dev/null; then
            print_status "OK" "–ü–æ–ª–∏—Ç–∏–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª–µ–π –≤–∫–ª—é—á–µ–Ω–∞"
        else
            print_status "INFO" "–ü–æ–ª–∏—Ç–∏–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª–µ–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
        fi
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
check_accounts() {
    print_section "–ü–†–û–í–ï–†–ö–ê –£–ß–ï–¢–ù–´–• –ó–ê–ü–ò–°–ï–ô"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –±–µ–∑ –ø–∞—Ä–æ–ª—è
    echo "  üîç –ü–æ–∏—Å–∫ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –±–µ–∑ –ø–∞—Ä–æ–ª—è..."
    local empty_password_count=0
    
    if [ -r /etc/shadow ]; then
        while IFS=: read -r user pass; do
            if [ -z "$pass" ] || [ "$pass" = "!" ] || [ "$pass" = "*" ]; then
                echo "    üîì $user: –ø—É—Å—Ç–æ–π –ø–∞—Ä–æ–ª—å –∏–ª–∏ –≤—Ö–æ–¥ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω"
                empty_password_count=$((empty_password_count + 1))
            fi
        done < /etc/shadow
        
        if [ "$empty_password_count" -eq 0 ]; then
            print_status "OK" "–£—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –±–µ–∑ –ø–∞—Ä–æ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
        else
            print_status "WARN" "–ù–∞–π–¥–µ–Ω–æ —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –±–µ–∑ –ø–∞—Ä–æ–ª—è: $empty_password_count"
        fi
    else
        echo "    ‚ÑπÔ∏è  –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ /etc/shadow"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
    echo ""
    echo "  üìÖ –ü–æ–∏—Å–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π..."
    local inactive_users=0
    
    if command -v lastlog >/dev/null 2>&1; then
        lastlog | grep -v "Never logged in" | grep -v "Username" | while read -r line; do
            local user=$(echo "$line" | awk '{print $1}')
            local last_login=$(echo "$line" | awk '{print $4, $5, $6, $7}')
            echo "    ‚è∞ $user: –ø–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥ $last_login"
            inactive_users=$((inactive_users + 1))
        done
    else
        echo "    ‚ÑπÔ∏è  –ö–æ–º–∞–Ω–¥–∞ lastlog –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–æ–ª—å–∫–æ —Å sudo)
create_test_user() {
    print_section "–°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø"
    
    if [ "$EUID" -ne 0 ]; then
        echo "  ‚ÑπÔ∏è  –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ root"
        return
    fi
    
    local test_user="testuser_$(date +%s)"
    
    echo "  –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $test_user"
    
    if useradd -m -s /bin/bash -c "Test User" "$test_user" 2>/dev/null; then
        echo "    üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $test_user —Å–æ–∑–¥–∞–Ω"
        echo "    üè† –î–æ–º–∞—à–Ω—è—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: /home/$test_user"
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–∞—Ä–æ–ª—å
        echo "$test_user:testpass123" | chpasswd 2>/dev/null && echo "    üîë –ü–∞—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –≥—Ä—É–ø–ø—É
        local test_group="testgroup_$(date +%s)"
        if groupadd "$test_group" 2>/dev/null; then
            echo "    üë• –ì—Ä—É–ø–ø–∞ $test_group —Å–æ–∑–¥–∞–Ω–∞"
            usermod -a -G "$test_group" "$test_user" 2>/dev/null && echo "    ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É"
        fi
        
        print_status "OK" "–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
        echo "    üí° –î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: sudo userdel -r $test_user"
    else
        print_status "ERROR" "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_header
    log "–ó–∞–ø—É—Å–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    
    get_users_info
    get_groups_info
    check_password_policy
    check_accounts
    
    echo ""
    echo -e "${GREEN}‚úÖ –ê—É–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω${NC}"
    log "–ê—É–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω"
    echo ""
    echo -e "${CYAN}üìù –ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –≤ –ª–æ–≥–∞—Ö: $LOG_FILE${NC}"
}

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥
cmd_create_test() {
    if [ "$EUID" -eq 0 ]; then
        create_test_user
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ root${NC}"
        echo "  –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo $0 create-test"
    fi
}

cmd_list_users() {
    print_header
    get_users_info
}

cmd_list_groups() {
    print_header
    get_groups_info
}

cmd_help() {
    echo -e "${CYAN}üë• –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –≥—Ä—É–ø–ø - –°–ø—Ä–∞–≤–∫–∞${NC}"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  create-test - —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç—Ä–µ–±—É–µ—Ç sudo)"
    echo "  list-users  - —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
    echo "  list-groups - —Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø"
    echo "  help        - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
    echo ""
    echo "–ë–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤: –ø–æ–ª–Ω—ã–π –∞—É–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –≥—Ä—É–ø–ø"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0                    # –ü–æ–ª–Ω—ã–π –∞—É–¥–∏—Ç"
    echo "  sudo $0 create-test   # –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    echo "  $0 list-users         # –¢–æ–ª—å–∫–æ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-}" in
    "create-test") cmd_create_test ;;
    "list-users") cmd_list_users ;;
    "list-groups") cmd_list_groups ;;
    "help") cmd_help ;;
    *) main ;;
esac
