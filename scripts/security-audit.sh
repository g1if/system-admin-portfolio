#!/bin/bash
# üîí –°–∫—Ä–∏–ø—Ç –∞—É–¥–∏—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
# –ê–≤—Ç–æ—Ä: g1if
# –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/g1if/system-admin-portfolio

set -euo pipefail

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
LOG_DIR="$PROJECT_ROOT/logs"
LOG_FILE="$LOG_DIR/security-audit.log"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p "$LOG_DIR"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOG_FILE"
}

print_header() {
    echo -e "${CYAN}"
    echo "üîí ==========================================="
    echo "   –ê–£–î–ò–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò –°–ò–°–¢–ï–ú–´ v1.0"
    echo "   $(date)"
    echo "   –ê–≤—Ç–æ—Ä: g1if"
    echo "==========================================="
    echo -e "${NC}"
}

print_section() {
    echo -e "${BLUE}üîç $1${NC}"
}

print_status() {
    local status=$1
    local message=$2
    case $status in
        "OK") echo -e "  ${GREEN}‚úÖ $message${NC}" ;;
        "WARN") echo -e "  ${YELLOW}‚ö†Ô∏è  $message${NC}" ;;
        "ERROR") echo -e "  ${RED}‚ùå $message${NC}" ;;
    esac
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–º–∞–Ω–¥
check_command() {
    if command -v "$1" >/dev/null 2>&1; then
        return 0
    else
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã
check_updates() {
    print_section "–ü–†–û–í–ï–†–ö–ê –û–ë–ù–û–í–õ–ï–ù–ò–ô –°–ò–°–¢–ï–ú–´"
    
    if [ -f /etc/debian_version ]; then
        # Debian/Ubuntu
        if check_command "apt"; then
            echo "  –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π apt..."
            local update_count=$(apt list --upgradable 2>/dev/null | grep -c upgradable || echo 0)
            if [ $update_count -gt 0 ]; then
                print_status "WARN" "–î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: $update_count"
                echo "    –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo apt update && sudo apt upgrade"
            else
                print_status "OK" "–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
            fi
        fi
    else
        echo "  ‚ÑπÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è Debian/Ubuntu"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—å–Ω–æ–π –ø–æ–ª–∏—Ç–∏–∫–∏
check_password_policy() {
    print_section "–ü–†–û–í–ï–†–ö–ê –ü–ê–†–û–õ–¨–ù–û–ô –ü–û–õ–ò–¢–ò–ö–ò"
    
    if [ -f /etc/login.defs ]; then
        local pass_max_days=$(grep "^PASS_MAX_DAYS" /etc/login.defs | awk '{print $2}')
        local pass_min_days=$(grep "^PASS_MIN_DAYS" /etc/login.defs | awk '{print $2}')
        local pass_warn_age=$(grep "^PASS_WARN_AGE" /etc/login.defs | awk '{print $2}')
        
        echo "  –ú–∞–∫—Å. –¥–Ω–µ–π –ø–∞—Ä–æ–ª—è: ${pass_max_days:-–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ}"
        echo "  –ú–∏–Ω. –¥–Ω–µ–π –ø–∞—Ä–æ–ª—è: ${pass_min_days:-–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ}"
        echo "  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ –¥–Ω–µ–π: ${pass_warn_age:-–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ}"
        
        if [ "${pass_max_days:-0}" -gt 90 ]; then
            print_status "WARN" "–°–ª–∏—à–∫–æ–º –¥–æ–ª–≥–∏–π —Å—Ä–æ–∫ –∂–∏–∑–Ω–∏ –ø–∞—Ä–æ–ª—è (>90 –¥–Ω–µ–π)"
        else
            print_status "OK" "–ü–æ–ª–∏—Ç–∏–∫–∞ —Å—Ä–æ–∫–∞ –∂–∏–∑–Ω–∏ –ø–∞—Ä–æ–ª—è –≤ –Ω–æ—Ä–º–µ"
        fi
    else
        print_status "WARN" "–§–∞–π–ª login.defs –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
check_ssh_security() {
    print_section "–ü–†–û–í–ï–†–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò SSH"
    
    if [ -f /etc/ssh/sshd_config ]; then
        local permit_root=$(grep -i "^PermitRootLogin" /etc/ssh/sshd_config | tail -1 | awk '{print $2}')
        local password_auth=$(grep -i "^PasswordAuthentication" /etc/ssh/sshd_config | tail -1 | awk '{print $2}')
        local protocol=$(grep -i "^Protocol" /etc/ssh/sshd_config | tail -1 | awk '{print $2}')
        
        echo "  Root –¥–æ—Å—Ç—É–ø: ${permit_root:-–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ}"
        echo "  –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–∞—Ä–æ–ª–µ–º: ${password_auth:-–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ}"
        echo "  –ü—Ä–æ—Ç–æ–∫–æ–ª: ${protocol:-–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ}"
        
        if [ "${permit_root:-yes}" = "yes" ]; then
            print_status "WARN" "Root –¥–æ—Å—Ç—É–ø –ø–æ SSH —Ä–∞–∑—Ä–µ—à–µ–Ω"
        else
            print_status "OK" "Root –¥–æ—Å—Ç—É–ø –ø–æ SSH –∑–∞–ø—Ä–µ—â–µ–Ω"
        fi
        
        if [ "${password_auth:-yes}" = "yes" ]; then
            print_status "WARN" "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–∞—Ä–æ–ª–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∞"
        else
            print_status "OK" "–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –ø–æ –∫–ª—é—á—É"
        fi
    else
        print_status "WARN" "–§–∞–π–ª sshd_config –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤
check_open_ports() {
    print_section "–ü–†–û–í–ï–†–ö–ê –û–¢–ö–†–´–¢–´–• –ü–û–†–¢–û–í"
    
    if check_command "ss"; then
        echo "  –°–ª—É—à–∞—é—â–∏–µ –ø–æ—Ä—Ç—ã:"
        ss -tulpn | grep LISTEN | while read line; do
            local port=$(echo $line | awk '{print $5}' | rev | cut -d: -f1 | rev)
            local service=$(echo $line | awk '{print $7}')
            echo "    –ü–æ—Ä—Ç $port: $service"
        done
    elif check_command "netstat"; then
        echo "  –°–ª—É—à–∞—é—â–∏–µ –ø–æ—Ä—Ç—ã:"
        netstat -tulpn 2>/dev/null | grep LISTEN | while read line; do
            local port=$(echo $line | awk '{print $4}' | rev | cut -d: -f1 | rev)
            local service=$(echo $line | awk '{print $7}')
            echo "    –ü–æ—Ä—Ç $port: $service"
        done
    else
        echo "  ‚ÑπÔ∏è  –ö–æ–º–∞–Ω–¥—ã ss/netstat –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SUID —Ñ–∞–π–ª–æ–≤
check_suid_files() {
    print_section "–ü–†–û–í–ï–†–ö–ê SUID –§–ê–ô–õ–û–í"
    
    local suid_count=0
    if check_command "find"; then
        suid_count=$(find / -perm -4000 -type f 2>/dev/null | wc -l)
        echo "  –ù–∞–π–¥–µ–Ω–æ SUID —Ñ–∞–π–ª–æ–≤: $suid_count"
        
        if [ $suid_count -gt 50 ]; then
            print_status "WARN" "–ú–Ω–æ–≥–æ SUID —Ñ–∞–π–ª–æ–≤ ($suid_count), —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å"
        else
            print_status "OK" "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ SUID —Ñ–∞–π–ª–æ–≤ –≤ –Ω–æ—Ä–º–µ"
        fi
    else
        echo "  ‚ÑπÔ∏è  –ö–æ–º–∞–Ω–¥–∞ find –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
check_users() {
    print_section "–ü–†–û–í–ï–†–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô"
    
    local users_with_shell=$(getent passwd | grep -v "nologin" | grep -v "false" | cut -d: -f1 | wc -l)
    local empty_password=$(awk -F: '($2 == "") {print $1}' /etc/shadow 2>/dev/null | wc -l)
    
    echo "  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å shell: $users_with_shell"
    echo "  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—É—Å—Ç—ã–º –ø–∞—Ä–æ–ª–µ–º: $empty_password"
    
    if [ $empty_password -gt 0 ]; then
        print_status "ERROR" "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ø—É—Å—Ç—ã–º–∏ –ø–∞—Ä–æ–ª—è–º–∏!"
    else
        print_status "OK" "–ü—É—Å—Ç—ã–µ –ø–∞—Ä–æ–ª–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
check_firewall() {
    print_section "–ü–†–û–í–ï–†–ö–ê –§–ê–ô–†–í–û–õ–ê"
    
    if check_command "ufw"; then
        local ufw_status=$(ufw status 2>/dev/null | grep "Status")
        echo "  UFW: $ufw_status"
        
        if echo "$ufw_status" | grep -q "active"; then
            print_status "OK" "UFW –≤–∫–ª—é—á–µ–Ω"
        else
            print_status "WARN" "UFW –æ—Ç–∫–ª—é—á–µ–Ω"
        fi
    elif check_command "iptables"; then
        local iptables_rules=$(iptables -L 2>/dev/null | grep -c "^ACCEPT\|^DROP\|^REJECT" || echo 0)
        echo "  –ü—Ä–∞–≤–∏–ª iptables: $iptables_rules"
        
        if [ $iptables_rules -gt 0 ]; then
            print_status "OK" "IPTables –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        else
            print_status "WARN" "IPTables –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        fi
    else
        print_status "WARN" "–§–∞–π—Ä–≤–æ–ª –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_header
    log "–ó–∞–ø—É—Å–∫ –∞—É–¥–∏—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    
    check_updates
    check_password_policy
    check_ssh_security
    check_open_ports
    check_suid_files
    check_users
    check_firewall
    
    echo ""
    echo -e "${GREEN}‚úÖ –ê—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω${NC}"
    log "–ê—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω"
    echo ""
    echo -e "${CYAN}üìù –ü–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –≤ –ª–æ–≥–∞—Ö: $LOG_FILE${NC}"
    echo ""
    echo -e "${YELLOW}üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:${NC}"
    echo "  - –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ —Å–∏—Å—Ç–µ–º—É"
    echo "  - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–ª–æ–∂–Ω—ã–µ –ø–∞—Ä–æ–ª–∏"
    echo "  - –û—Ç–∫–ª—é—á–∏—Ç–µ root –¥–æ—Å—Ç—É–ø –ø–æ SSH"
    echo "  - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π—Ä–≤–æ–ª"
    echo "  - –ü—Ä–æ–≤–æ–¥–∏—Ç–µ –∞—É–¥–∏—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-}" in
    "quick")
        # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
        check_updates
        check_ssh_security
        check_firewall
        ;;
    "help")
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [quick|help]"
        echo "  quick - –±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"
        echo "  help  - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
        echo ""
        echo "–ë–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤: –ø–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
        ;;
    *)
        main
        ;;
esac
EOF
