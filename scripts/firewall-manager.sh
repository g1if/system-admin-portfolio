#!/bin/bash
# üî• –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä —Ñ–∞–µ—Ä–≤–æ–ª–∞ (UFW/iptables/firewalld)
# –ê–≤—Ç–æ—Ä: g1if
# –í–µ—Ä—Å–∏—è: 2.0

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
LOG_DIR="$PROJECT_ROOT/logs"
CONFIG_DIR="$PROJECT_ROOT/configs"
BACKUP_DIR="$PROJECT_ROOT/backups"

mkdir -p "$LOG_DIR" "$CONFIG_DIR" "$BACKUP_DIR"

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
PURPLE='\033[0;35m'
ORANGE='\033[0;33m'
NC='\033[0m'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
FIREWALL_CONFIG="$CONFIG_DIR/firewall.conf"
FIREWALL_LOG="$LOG_DIR/firewall-manager.log"
BACKUP_FILE="$BACKUP_DIR/firewall-backup-$(date +%Y%m%d_%H%M%S).rules"

# –§—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–æ–¥–∞
print_header() {
    echo -e "${CYAN}"
    echo "üî• ==========================================="
    echo "   –ú–ï–ù–ï–î–ñ–ï–† –§–ê–ï–†–í–û–õ–ê v2.0"
    echo "   $(date)"
    echo "   –ê–≤—Ç–æ—Ä: g1if"
    echo "==========================================="
    echo -e "${NC}"
}

print_section() {
    echo -e "${BLUE}üìä $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_info() {
    echo -e "${PURPLE}‚ÑπÔ∏è  $1${NC}"
}

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log_action() {
    local action=$1
    local message=$2
    local level=${3:-"INFO"}
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    echo "[$timestamp] [$level] [$action] $message" >> "$FIREWALL_LOG"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    local firewall_type=$(detect_firewall)
    
    case "$firewall_type" in
        "ufw")
            if ! command -v ufw >/dev/null 2>&1; then
                print_error "UFW –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install ufw"
                return 1
            fi
            ;;
        "iptables")
            if ! command -v iptables >/dev/null 2>&1; then
                print_error "iptables –Ω–µ –Ω–∞–π–¥–µ–Ω"
                return 1
            fi
            ;;
        "firewalld")
            if ! command -v firewall-cmd >/dev/null 2>&1; then
                print_error "firewalld –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
                echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install firewalld"
                return 1
            fi
            ;;
        "none")
            print_error "–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–∞–µ—Ä–≤–æ–ª"
            echo "üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ–¥–∏–Ω –∏–∑: UFW, iptables, firewalld"
            return 1
            ;;
    esac
    
    return 0
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ñ–∞–µ—Ä–≤–æ–ª–∞
detect_firewall() {
    if command -v ufw >/dev/null 2>&1 && systemctl is-active ufw >/dev/null 2>&1; then
        echo "ufw"
    elif command -v firewall-cmd >/dev/null 2>&1 && systemctl is-active firewalld >/dev/null 2>&1; then
        echo "firewalld"
    elif command -v iptables >/dev/null 2>&1; then
        echo "iptables"
    else
        echo "none"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
create_config() {
    cat > "$FIREWALL_CONFIG" << 'CONFIG_EOF'
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Ñ–∞–µ—Ä–≤–æ–ª–∞ v2.0

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–∞–µ—Ä–≤–æ–ª–∞ (ufw, iptables, firewalld)
AUTO_DETECT_FIREWALL=true

# –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Ñ–∞–µ—Ä–≤–æ–ª (–µ—Å–ª–∏ AUTO_DETECT_FIREWALL=false)
PREFERRED_FIREWALL="ufw"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—ç–∫–∞–ø–∞
BACKUP_BEFORE_CHANGES=true
BACKUP_RETENTION_DAYS=7

# –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ—Ä—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
COMMON_PORTS=("22" "80" "443" "53" "21" "25" "110" "143" "993" "995")

# –ó–æ–Ω—ã –¥–ª—è firewalld
FIREWALLD_ZONES=("public" "internal" "trusted")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
LOG_DROPPED_PACKETS=true
LOG_LEVEL="low"

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞
AUTO_ALLOW_LOOPBACK=true
AUTO_ALLOW_SSH=true
AUTO_ALLOW_ICMP=true

# –ü–æ–ª–∏—Ç–∏–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
DEFAULT_INPUT_POLICY="DENY"
DEFAULT_OUTPUT_POLICY="ALLOW"
DEFAULT_FORWARD_POLICY="DENY"
CONFIG_EOF
    
    print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: $FIREWALL_CONFIG"
    log_action "CONFIG" "–°–æ–∑–¥–∞–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª" "INFO"
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
load_config() {
    if [ -f "$FIREWALL_CONFIG" ]; then
        source "$FIREWALL_CONFIG"
        print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
    else
        print_warning "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."
        AUTO_DETECT_FIREWALL=true
        PREFERRED_FIREWALL="ufw"
        BACKUP_BEFORE_CHANGES=true
        BACKUP_RETENTION_DAYS=7
        COMMON_PORTS=("22" "80" "443" "53")
        FIREWALLD_ZONES=("public" "internal")
        LOG_DROPPED_PACKETS=true
        LOG_LEVEL="low"
        AUTO_ALLOW_LOOPBACK=true
        AUTO_ALLOW_SSH=true
        AUTO_ALLOW_ICMP=true
        DEFAULT_INPUT_POLICY="DENY"
        DEFAULT_OUTPUT_POLICY="ALLOW"
        DEFAULT_FORWARD_POLICY="DENY"
        
        log_action "CONFIG" "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é" "WARNING"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –ø—Ä–∞–≤–∏–ª
backup_rules() {
    local firewall_type=$(detect_firewall)
    local backup_file="$BACKUP_FILE"
    
    print_section "–°–û–ó–î–ê–ù–ò–ï –ë–≠–ö–ê–ü–ê –ü–†–ê–í–ò–õ"
    
    case "$firewall_type" in
        "ufw")
            if sudo ufw status numbered > "$backup_file" 2>/dev/null; then
                print_success "–ë—ç–∫–∞–ø UFW —Å–æ–∑–¥–∞–Ω: $(basename "$backup_file")"
            else
                print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø UFW"
                return 1
            fi
            ;;
        "iptables")
            if sudo iptables-save > "$backup_file" 2>/dev/null; then
                print_success "–ë—ç–∫–∞–ø iptables —Å–æ–∑–¥–∞–Ω: $(basename "$backup_file")"
            else
                print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø iptables"
                return 1
            fi
            ;;
        "firewalld")
            if sudo firewall-cmd --runtime-to-permanent 2>/dev/null && \
               sudo cp /etc/firewalld/firewalld.conf "$backup_file.firewalld.conf" 2>/dev/null; then
                print_success "–ë—ç–∫–∞–ø firewalld —Å–æ–∑–¥–∞–Ω: $(basename "$backup_file")"
            else
                print_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø firewalld"
                return 1
            fi
            ;;
        *)
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ñ–∞–µ—Ä–≤–æ–ª–∞ –¥–ª—è –±—ç–∫–∞–ø–∞"
            return 1
            ;;
    esac
    
    log_action "BACKUP" "–°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø –ø—Ä–∞–≤–∏–ª: $backup_file" "INFO"
    echo "$backup_file"
}

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞
restore_rules() {
    local backup_file=$1
    
    if [ -z "$backup_file" ]; then
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã
        print_section "–î–û–°–¢–£–ü–ù–´–ï –ë–≠–ö–ê–ü–´"
        
        local backups=($(ls -1t "$BACKUP_DIR"/firewall-backup-*.rules 2>/dev/null | head -5))
        
        if [ ${#backups[@]} -eq 0 ]; then
            print_error "–ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            return 1
        fi
        
        echo "–í—ã–±–µ—Ä–∏—Ç–µ –±—ç–∫–∞–ø –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:"
        echo ""
        
        for i in "${!backups[@]}"; do
            local file=$(basename "${backups[$i]}")
            local date_part=$(echo "$file" | sed 's/firewall-backup-//' | sed 's/.rules//')
            local pretty_date=$(echo "$date_part" | sed 's/_/ /')
            echo "  $((i+1)). $pretty_date - $file"
        done
        
        echo ""
        read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –±—ç–∫–∞–ø–∞: " backup_num
        
        if [[ ! "$backup_num" =~ ^[0-9]+$ ]] || [ "$backup_num" -lt 1 ] || [ "$backup_num" -gt ${#backups[@]} ]; then
            print_error "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –±—ç–∫–∞–ø–∞"
            return 1
        fi
        
        backup_file="${backups[$((backup_num-1))]}"
    fi
    
    if [ ! -f "$backup_file" ]; then
        print_error "–§–∞–π–ª –±—ç–∫–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: $backup_file"
        return 1
    fi
    
    local firewall_type=$(detect_firewall)
    print_section "–í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ò–ó –ë–≠–ö–ê–ü–ê"
    echo "  üìÅ –§–∞–π–ª: $(basename "$backup_file")"
    echo "  üîß –§–∞–µ—Ä–≤–æ–ª: $firewall_type"
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    backup_rules > /dev/null 2>&1
    
    case "$firewall_type" in
        "ufw")
            print_warning "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ UFW —Ç—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞"
            echo "  üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: sudo ufw reset && cat $backup_file | sudo ufw import"
            ;;
        "iptables")
            if sudo iptables-restore < "$backup_file" 2>/dev/null; then
                print_success "–ü—Ä–∞–≤–∏–ª–∞ iptables –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
            else
                print_error "–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è iptables"
                return 1
            fi
            ;;
        "firewalld")
            if sudo firewall-cmd --reload 2>/dev/null; then
                print_success "Firewalld –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω"
            else
                print_error "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ firewalld"
                return 1
            fi
            ;;
        *)
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Ñ–∞–µ—Ä–≤–æ–ª–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"
            return 1
            ;;
    esac
    
    log_action "RESTORE" "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∏–ª–∞ –∏–∑ $backup_file" "INFO"
}

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Ñ–∞–µ—Ä–≤–æ–ª–∞
show_status_detailed() {
    local firewall_type=$(detect_firewall)
    
    print_section "–î–ï–¢–ê–õ–¨–ù–´–ô –°–¢–ê–¢–£–° –§–ê–ï–†–í–û–õ–ê"
    echo "  üîß –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ñ–∞–µ—Ä–≤–æ–ª: $firewall_type"
    echo ""
    
    case "$firewall_type" in
        "ufw")
            echo "üìä –°—Ç–∞—Ç—É—Å UFW:"
            sudo ufw status verbose
            
            echo ""
            echo "üìã –ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞:"
            sudo ufw status numbered
            
            echo ""
            echo "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
            sudo ufw show raw | grep -c "DROP" 2>/dev/null | xargs echo "  üîª –û—Ç–±—Ä–æ—à–µ–Ω–æ –ø–∞–∫–µ—Ç–æ–≤:"
            sudo ufw show raw | grep -c "ACCEPT" 2>/dev/null | xargs echo "  ‚úÖ –ü—Ä–∏–Ω—è—Ç–æ –ø–∞–∫–µ—Ç–æ–≤:"
            ;;
            
        "iptables")
            echo "üìä –¶–µ–ø–æ—á–∫–∏ iptables:"
            echo "=== INPUT –¶–ï–ü–û–ß–ö–ê ==="
            sudo iptables -L INPUT -n -v --line-numbers
            echo ""
            echo "=== OUTPUT –¶–ï–ü–û–ß–ö–ê ==="
            sudo iptables -L OUTPUT -n -v --line-numbers
            echo ""
            echo "=== FORWARD –¶–ï–ü–û–ß–ö–ê ==="
            sudo iptables -L FORWARD -n -v --line-numbers
            
            echo ""
            echo "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
            sudo iptables -L INPUT -n -v | awk '/^[[:space:]]*[0-9]+/ {pkts+=$1; bytes+=$2} END {print "  üì¶ –ü–∞–∫–µ—Ç—ã INPUT: " pkts " (" bytes " bytes)"}'
            sudo iptables -L OUTPUT -n -v | awk '/^[[:space:]]*[0-9]+/ {pkts+=$1; bytes+=$2} END {print "  üì§ –ü–∞–∫–µ—Ç—ã OUTPUT: " pkts " (" bytes " bytes)"}'
            ;;
            
        "firewalld")
            echo "üìä –°—Ç–∞—Ç—É—Å firewalld:"
            sudo firewall-cmd --state
            echo ""
            echo "üåç –ê–∫—Ç–∏–≤–Ω–∞—è –∑–æ–Ω–∞:"
            sudo firewall-cmd --get-active-zones
            echo ""
            echo "üìã –ü—Ä–∞–≤–∏–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ–π –∑–æ–Ω—ã:"
            sudo firewall-cmd --list-all
            echo ""
            echo "üõ°Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
            sudo firewall-cmd --get-services | tr ' ' '\n' | head -10
            ;;
            
        *)
            print_error "–§–∞–µ—Ä–≤–æ–ª –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω –∏–ª–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
            echo "üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–µ—Ä–≤–æ–ª—ã: UFW, iptables, firewalld"
            ;;
    esac
}

# –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã —Å–∏—Å—Ç–µ–º—ã
show_listening_ports() {
    print_section "–û–¢–ö–†–´–¢–´–ï –ü–û–†–¢–´ –°–ò–°–¢–ï–ú–´"
    
    echo "üîç –°–ª—É—à–∞—é—â–∏–µ –ø–æ—Ä—Ç—ã:"
    if command -v ss >/dev/null 2>&1; then
        sudo ss -tulpn | head -20
    elif command -v netstat >/dev/null 2>&1; then
        sudo netstat -tulpn | head -20
    else
        echo "  ‚ÑπÔ∏è  ss –∏–ª–∏ netstat –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
    
    echo ""
    echo "üåê –í–Ω–µ—à–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
    if command -v ss >/dev/null 2>&1; then
        sudo ss -tun | grep ESTAB | head -10
    fi
}

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª
show_rules_detailed() {
    local firewall_type=$(detect_firewall)
    
    print_section "–î–ï–¢–ê–õ–¨–ù–´–ô –°–ü–ò–°–û–ö –ü–†–ê–í–ò–õ"
    
    case "$firewall_type" in
        "ufw")
            echo "üìã –ü—Ä–∞–≤–∏–ª–∞ UFW:"
            sudo ufw status numbered
            
            echo ""
            echo "üìä –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
            sudo ufw show added
            
            echo ""
            echo "üîÑ –ü—Ä–∞–≤–∏–ª–∞ RAW:"
            sudo ufw show raw | head -20
            ;;
            
        "iptables")
            echo "üìã –í—Å–µ —Ü–µ–ø–æ—á–∫–∏ iptables:"
            for table in filter nat mangle raw; do
                if sudo iptables -t $table -L -n --line-numbers 2>/dev/null | grep -q -E "^Chain|^num"; then
                    echo "=== –¢–ê–ë–õ–ò–¶–ê $table ==="
                    sudo iptables -t $table -L -n --line-numbers 2>/dev/null | head -20
                    echo ""
                fi
            done
            ;;
            
        "firewalld")
            echo "üìã –í—Å–µ –∑–æ–Ω—ã firewalld:"
            for zone in $(sudo firewall-cmd --get-zones); do
                echo "=== –ó–û–ù–ê $zone ==="
                sudo firewall-cmd --zone="$zone" --list-all
                echo ""
            done
            ;;
            
        *)
            print_error "–§–∞–µ—Ä–≤–æ–ª –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            ;;
    esac
}

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞–º–∏ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é
manage_port() {
    local action=$1
    local port=$2
    local protocol=${3:-"tcp"}
    local source=${4:-""}
    
    if [ -z "$port" ]; then
        print_error "–£–∫–∞–∂–∏—Ç–µ –ø–æ—Ä—Ç"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
    if [[ ! "$port" =~ ^[0-9]+(-[0-9]+)?$ ]] || [ "$port" -lt 1 ] || [ "$port" -gt 65535 ]; then
        print_error "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–æ—Ä—Ç: $port"
        return 1
    fi
    
    local firewall_type=$(detect_firewall)
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –ø–µ—Ä–µ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏
    if [ "$BACKUP_BEFORE_CHANGES" = "true" ]; then
        backup_rules > /dev/null 2>&1
    fi
    
    case "$firewall_type" in
        "ufw")
            case "$action" in
                "allow")
                    if [ -n "$source" ]; then
                        sudo ufw allow from "$source" to any port "$port"/"$protocol"
                    else
                        sudo ufw allow "$port"/"$protocol"
                    fi
                    print_success "–ü–æ—Ä—Ç $port/$protocol —Ä–∞–∑—Ä–µ—à–µ–Ω"
                    ;;
                "deny")
                    if [ -n "$source" ]; then
                        sudo ufw deny from "$source" to any port "$port"/"$protocol"
                    else
                        sudo ufw deny "$port"/"$protocol"
                    fi
                    print_success "–ü–æ—Ä—Ç $port/$protocol –∑–∞–ø—Ä–µ—â–µ–Ω"
                    ;;
                "delete")
                    sudo ufw delete allow "$port"/"$protocol" 2>/dev/null || \
                    sudo ufw delete deny "$port"/"$protocol" 2>/dev/null || \
                    print_warning "–ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –ø–æ—Ä—Ç–∞ $port –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
                    print_success "–ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –ø–æ—Ä—Ç–∞ $port —É–¥–∞–ª–µ–Ω–æ"
                    ;;
            esac
            ;;
            
        "iptables")
            case "$action" in
                "allow")
                    local rule="-A INPUT -p $protocol --dport $port -j ACCEPT"
                    if [ -n "$source" ]; then
                        rule="-A INPUT -s $source -p $protocol --dport $port -j ACCEPT"
                    fi
                    sudo iptables $rule
                    print_success "–ü—Ä–∞–≤–∏–ª–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ: $rule"
                    ;;
                "deny")
                    local rule="-A INPUT -p $protocol --dport $port -j DROP"
                    if [ -n "$source" ]; then
                        rule="-A INPUT -s $source -p $protocol --dport $port -j DROP"
                    fi
                    sudo iptables $rule
                    print_success "–ü—Ä–∞–≤–∏–ª–æ –∑–∞–ø—Ä–µ—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–æ: $rule"
                    ;;
                "delete")
                    # –ù–∞—Ö–æ–¥–∏–º –Ω–æ–º–µ—Ä –ø—Ä–∞–≤–∏–ª–∞ –∏ —É–¥–∞–ª—è–µ–º
                    local rule_num=$(sudo iptables -L INPUT --line-numbers -n | grep -E "dpt:$port($| )" | awk '{print $1}' | head -1)
                    if [ -n "$rule_num" ]; then
                        sudo iptables -D INPUT "$rule_num"
                        print_success "–ü—Ä–∞–≤–∏–ª–æ $rule_num —É–¥–∞–ª–µ–Ω–æ"
                    else
                        print_warning "–ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –ø–æ—Ä—Ç–∞ $port –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
                    fi
                    ;;
            esac
            ;;
            
        "firewalld")
            case "$action" in
                "allow")
                    sudo firewall-cmd --add-port="$port/$protocol" --permanent
                    sudo firewall-cmd --reload
                    print_success "–ü–æ—Ä—Ç $port/$protocol —Ä–∞–∑—Ä–µ—à–µ–Ω"
                    ;;
                "deny")
                    sudo firewall-cmd --remove-port="$port/$protocol" --permanent
                    sudo firewall-cmd --reload
                    print_success "–ü–æ—Ä—Ç $port/$protocol –∑–∞–ø—Ä–µ—â–µ–Ω"
                    ;;
                "delete")
                    sudo firewall-cmd --remove-port="$port/$protocol" --permanent
                    sudo firewall-cmd --reload
                    print_success "–ü—Ä–∞–≤–∏–ª–æ –¥–ª—è –ø–æ—Ä—Ç–∞ $port —É–¥–∞–ª–µ–Ω–æ"
                    ;;
            esac
            ;;
            
        *)
            print_error "–§–∞–µ—Ä–≤–æ–ª –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            return 1
            ;;
    esac
    
    log_action "${action^^}_PORT" "–ü–æ—Ä—Ç $port/$protocol $action (source: ${source:-any})" "INFO"
}

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏
manage_service() {
    local action=$1
    local service=$2
    
    if [ -z "$service" ]; then
        print_error "–£–∫–∞–∂–∏—Ç–µ –∏–º—è —Å–µ—Ä–≤–∏—Å–∞"
        return 1
    fi
    
    local firewall_type=$(detect_firewall)
    
    case "$firewall_type" in
        "ufw")
            case "$action" in
                "allow")
                    sudo ufw allow "$service"
                    print_success "–°–µ—Ä–≤–∏—Å $service —Ä–∞–∑—Ä–µ—à–µ–Ω"
                    ;;
                "deny")
                    sudo ufw deny "$service"
                    print_success "–°–µ—Ä–≤–∏—Å $service –∑–∞–ø—Ä–µ—â–µ–Ω"
                    ;;
            esac
            ;;
            
        "firewalld")
            case "$action" in
                "allow")
                    sudo firewall-cmd --add-service="$service" --permanent
                    sudo firewall-cmd --reload
                    print_success "–°–µ—Ä–≤–∏—Å $service —Ä–∞–∑—Ä–µ—à–µ–Ω"
                    ;;
                "deny")
                    sudo firewall-cmd --remove-service="$service" --permanent
                    sudo firewall-cmd --reload
                    print_success "–°–µ—Ä–≤–∏—Å $service –∑–∞–ø—Ä–µ—â–µ–Ω"
                    ;;
            esac
            ;;
            
        *)
            print_error "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ UFW –∏ firewalld"
            return 1
            ;;
    esac
    
    log_action "${action^^}_SERVICE" "–°–µ—Ä–≤–∏—Å $service $action" "INFO"
}

# –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Ñ–∞–µ—Ä–≤–æ–ª–∞
manage_firewall_state() {
    local action=$1
    
    local firewall_type=$(detect_firewall)
    
    case "$firewall_type" in
        "ufw")
            case "$action" in
                "enable")
                    sudo ufw --force enable
                    print_success "–§–∞–µ—Ä–≤–æ–ª UFW –≤–∫–ª—é—á–µ–Ω"
                    ;;
                "disable")
                    sudo ufw disable
                    print_success "–§–∞–µ—Ä–≤–æ–ª UFW –≤—ã–∫–ª—é—á–µ–Ω"
                    ;;
            esac
            ;;
            
        "iptables")
            case "$action" in
                "enable")
                    print_warning "–î–ª—è iptables –≤–∫–ª—é—á–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª:"
                    echo "  sudo iptables-save > /etc/iptables/rules.v4"
                    echo "  sudo ip6tables-save > /etc/iptables/rules.v6"
                    ;;
                "disable")
                    sudo iptables -F
                    sudo iptables -X
                    sudo iptables -P INPUT ACCEPT
                    sudo iptables -P FORWARD ACCEPT
                    sudo iptables -P OUTPUT ACCEPT
                    print_success "–ü—Ä–∞–≤–∏–ª–∞ iptables –æ—á–∏—â–µ–Ω—ã"
                    ;;
            esac
            ;;
            
        "firewalld")
            case "$action" in
                "enable")
                    sudo systemctl enable firewalld
                    sudo systemctl start firewalld
                    print_success "–§–∞–µ—Ä–≤–æ–ª firewalld –≤–∫–ª—é—á–µ–Ω"
                    ;;
                "disable")
                    sudo systemctl stop firewalld
                    sudo systemctl disable firewalld
                    print_success "–§–∞–µ—Ä–≤–æ–ª firewalld –≤—ã–∫–ª—é—á–µ–Ω"
                    ;;
            esac
            ;;
            
        *)
            print_error "–§–∞–µ—Ä–≤–æ–ª –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            return 1
            ;;
    esac
    
    log_action "${action^^}_FIREWALL" "–§–∞–µ—Ä–≤–æ–ª $action" "INFO"
}

# –°–±—Ä–æ—Å –ø—Ä–∞–≤–∏–ª
reset_rules_advanced() {
    local firewall_type=$(detect_firewall)
    
    print_section "–°–ë–†–û–° –ü–†–ê–í–ò–õ –§–ê–ï–†–í–û–õ–ê"
    echo "  üîß –§–∞–µ—Ä–≤–æ–ª: $firewall_type"
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –ø–µ—Ä–µ–¥ —Å–±—Ä–æ—Å–æ–º
    local backup_file=$(backup_rules)
    
    case "$firewall_type" in
        "ufw")
            sudo ufw --force reset
            print_success "–ü—Ä–∞–≤–∏–ª–∞ UFW —Å–±—Ä–æ—à–µ–Ω—ã"
            ;;
        "iptables")
            sudo iptables -F
            sudo iptables -X
            sudo iptables -t nat -F
            sudo iptables -t nat -X
            sudo iptables -t mangle -F
            sudo iptables -t mangle -X
            sudo iptables -P INPUT ACCEPT
            sudo iptables -P FORWARD ACCEPT
            sudo iptables -P OUTPUT ACCEPT
            print_success "–ü—Ä–∞–≤–∏–ª–∞ iptables —Å–±—Ä–æ—à–µ–Ω—ã"
            ;;
        "firewalld")
            sudo firewall-cmd --complete-reload
            print_success "Firewalld –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω"
            ;;
        *)
            print_error "–§–∞–µ—Ä–≤–æ–ª –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            return 1
            ;;
    esac
    
    print_warning "–°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø –ø–µ—Ä–µ–¥ —Å–±—Ä–æ—Å–æ–º: $(basename "$backup_file")"
    log_action "RESET" "–ü—Ä–∞–≤–∏–ª–∞ —Ñ–∞–µ—Ä–≤–æ–ª–∞ —Å–±—Ä–æ—à–µ–Ω—ã (–±—ç–∫–∞–ø: $backup_file)" "WARNING"
}

# –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ common –ø–æ—Ä—Ç–æ–≤
setup_common_ports() {
    print_section "–ë–´–°–¢–†–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê –û–ë–©–ò–• –ü–û–†–¢–û–í"
    
    echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Ä—Ç–æ–≤: ${COMMON_PORTS[*]}"
    echo ""
    
    for port in "${COMMON_PORTS[@]}"; do
        echo "  üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Ä—Ç–∞ $port..."
        manage_port "allow" "$port" "tcp"
    done
    
    print_success "–û–±—â–∏–µ –ø–æ—Ä—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
    log_action "SETUP_COMMON_PORTS" "–ù–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø–æ—Ä—Ç—ã: ${COMMON_PORTS[*]}" "INFO"
}

# –ê–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
security_analysis() {
    print_section "–ê–ù–ê–õ–ò–ó –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò"
    
    local firewall_type=$(detect_firewall)
    
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ñ–∞–µ—Ä–≤–æ–ª–∞..."
    echo ""
    
    case "$firewall_type" in
        "ufw")
            local status=$(sudo ufw status 2>/dev/null | grep -i "status" | awk '{print $2}')
            if [ "$status" = "active" ]; then
                print_success "UFW –∞–∫—Ç–∏–≤–µ–Ω"
            else
                print_error "UFW –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
            fi
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–∏—Ç–∏–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            local input_policy=$(sudo ufw status verbose | grep "Default:" | awk '{print $2}')
            local output_policy=$(sudo ufw status verbose | grep "Default:" | awk '{print $3}')
            
            if [ "$input_policy" = "deny" ]; then
                print_success "–í—Ö–æ–¥—è—â–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞: $input_policy"
            else
                print_warning "–í—Ö–æ–¥—è—â–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞: $input_policy (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: deny)"
            fi
            ;;
            
        "iptables")
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤—ã—Ö —Ü–µ–ø–æ—á–µ–∫
            local input_policy=$(sudo iptables -L INPUT -n | grep "policy" | awk '{print $4}' | tr -d ')')
            if [ "$input_policy" = "DROP" ] || [ "$input_policy" = "REJECT" ]; then
                print_success "INPUT –ø–æ–ª–∏—Ç–∏–∫–∞: $input_policy"
            else
                print_warning "INPUT –ø–æ–ª–∏—Ç–∏–∫–∞: $input_policy (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è: DROP)"
            fi
            ;;
            
        *)
            print_warning "–ê–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è $firewall_type –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω"
            ;;
    esac
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤
    echo ""
    echo "üîì –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤:"
    show_listening_ports
}

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
monitor_traffic() {
    print_section "–ú–û–ù–ò–¢–û–†–ò–ù–ì –°–ï–¢–ï–í–û–ì–û –¢–†–ê–§–ò–ö–ê"
    
    echo "üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ç–µ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏..."
    echo "‚èπÔ∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
    echo ""
    
    if command -v iptables >/dev/null 2>&1; then
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏
        sudo iptables -Z
        
        echo "üîÑ –°—á–µ—Ç—á–∏–∫–∏ –ø–∞–∫–µ—Ç–æ–≤ (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã):"
        echo ""
        
        local counter=0
        while true; do
            counter=$((counter + 1))
            clear
            print_header
            echo "üîÅ –¶–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: $counter"
            echo "‚è∞ –í—Ä–µ–º—è: $(date)"
            echo "=========================================="
            
            echo "üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–ê–ö–ï–¢–û–í:"
            sudo iptables -L INPUT -n -v | head -10
            echo ""
            echo "üîç –ü–û–°–õ–ï–î–ù–ò–ï –°–û–ë–´–¢–ò–Ø:"
            sudo dmesg | grep -i "firewall\|iptables" | tail -5
            
            echo ""
            echo "‚è≥ –°–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã..."
            sleep 2
        done
    else
        print_error "iptables –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    load_config
    
    if ! check_dependencies; then
        exit 1
    fi
    
    case "${1:-}" in
        "status")
            print_header
            show_status_detailed
            ;;
        "list")
            print_header
            show_rules_detailed
            ;;
        "allow")
            print_header
            manage_port "allow" "$2" "$3" "$4"
            ;;
        "deny")
            print_header
            manage_port "deny" "$2" "$3" "$4"
            ;;
        "delete")
            print_header
            manage_port "delete" "$2" "$3"
            ;;
        "allow-service")
            print_header
            manage_service "allow" "$2"
            ;;
        "deny-service")
            print_header
            manage_service "deny" "$2"
            ;;
        "enable")
            print_header
            manage_firewall_state "enable"
            ;;
        "disable")
            print_header
            manage_firewall_state "disable"
            ;;
        "reset")
            print_header
            reset_rules_advanced
            ;;
        "backup")
            print_header
            backup_rules
            ;;
        "restore")
            print_header
            restore_rules "$2"
            ;;
        "ports")
            print_header
            show_listening_ports
            ;;
        "setup-common")
            print_header
            setup_common_ports
            ;;
        "security")
            print_header
            security_analysis
            ;;
        "monitor")
            print_header
            monitor_traffic
            ;;
        "config")
            print_header
            create_config
            ;;
        "help"|"--help"|"-h"|"")
            show_help
            ;;
        *)
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
            show_help
            exit 1
            ;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    print_header
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê] [–û–ü–¶–ò–ò]"
    echo ""
    echo "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  status                    - –î–µ—Ç–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Ñ–∞–µ—Ä–≤–æ–ª–∞"
    echo "  list                      - –î–µ—Ç–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª"
    echo "  allow <port> [proto] [src]- –†–∞–∑—Ä–µ—à–∏—Ç—å –ø–æ—Ä—Ç"
    echo "  deny <port> [proto] [src] - –ó–∞–ø—Ä–µ—Ç–∏—Ç—å –ø–æ—Ä—Ç"
    echo "  delete <port> [proto]     - –£–¥–∞–ª–∏—Ç—å –ø—Ä–∞–≤–∏–ª–æ –ø–æ—Ä—Ç–∞"
    echo "  allow-service <service>   - –†–∞–∑—Ä–µ—à–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
    echo "  deny-service <service>    - –ó–∞–ø—Ä–µ—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
    echo ""
    echo "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º:"
    echo "  enable                    - –í–∫–ª—é—á–∏—Ç—å —Ñ–∞–µ—Ä–≤–æ–ª"
    echo "  disable                   - –í—ã–∫–ª—é—á–∏—Ç—å —Ñ–∞–µ—Ä–≤–æ–ª"
    echo "  reset                     - –°–±—Ä–æ—Å–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ (—Å –±—ç–∫–∞–ø–æ–º)"
    echo "  backup                    - –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –ø—Ä–∞–≤–∏–ª"
    echo "  restore [file]            - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –±—ç–∫–∞–ø–∞"
    echo ""
    echo "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  ports                     - –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã —Å–∏—Å—Ç–µ–º—ã"
    echo "  setup-common              - –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—â–∏—Ö –ø–æ—Ä—Ç–æ–≤"
    echo "  security                  - –ê–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
    echo "  monitor                   - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç—Ä–∞—Ñ–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "  config                    - –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª"
    echo "  help                      - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 status                    # –î–µ—Ç–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å"
    echo "  $0 allow 22                  # –†–∞–∑—Ä–µ—à–∏—Ç—å SSH"
    echo "  $0 allow 80 tcp              # –†–∞–∑—Ä–µ—à–∏—Ç—å HTTP"
    echo "  $0 allow 443 tcp 192.168.1.0/24 # –†–∞–∑—Ä–µ—à–∏—Ç—å —Å –ø–æ–¥—Å–µ—Ç–∏"
    echo "  $0 allow-service ssh         # –†–∞–∑—Ä–µ—à–∏—Ç—å —Å–µ—Ä–≤–∏—Å SSH"
    echo "  $0 setup-common              # –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–±—â–∏–µ –ø–æ—Ä—Ç—ã"
    echo "  $0 monitor                   # –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç—Ä–∞—Ñ–∏–∫–∞"
    echo "  $0 restore                   # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ –±—ç–∫–∞–ø–∞"
}

main "$@"
