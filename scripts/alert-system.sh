#!/bin/bash
# üö® –°–∏—Å—Ç–µ–º–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–µ—Ç—Ä–∏–∫
# –ê–≤—Ç–æ—Ä: g1if

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
LOG_DIR="$PROJECT_ROOT/logs"
CONFIG_DIR="$PROJECT_ROOT/configs"
ALERT_DIR="$PROJECT_ROOT/alerts"

mkdir -p "$LOG_DIR" "$CONFIG_DIR" "$ALERT_DIR"

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–ø–æ–≤–µ—â–µ–Ω–∏–π
ALERT_CONFIG="$CONFIG_DIR/alert.conf"
ALERT_LOG="$ALERT_DIR/alert-history.log"

# –§—É–Ω–∫—Ü–∏–∏ –≤—ã–≤–æ–¥–∞
print_header() {
    echo -e "${CYAN}"
    echo "üö® ==========================================="
    echo "   –°–ò–°–¢–ï–ú–ê –û–ü–û–í–ï–©–ï–ù–ò–ô v1.1"
    echo "   $(date)"
    echo "   –ê–≤—Ç–æ—Ä: g1if"
    echo "==========================================="
    echo -e "${NC}"
}

print_section() {
    echo -e "${BLUE}üìä $1${NC}"
}

print_alert() {
    echo -e "${RED}üö® $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
create_config() {
    cat > "$ALERT_CONFIG" << 'EOF'
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –æ–ø–æ–≤–µ—â–µ–Ω–∏–π
# –ü–æ—Ä–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π

# –ó–∞–≥—Ä—É–∑–∫–∞ CPU (%)
CPU_CRITICAL=90
CPU_WARNING=80

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ (%)
MEMORY_CRITICAL=90
MEMORY_WARNING=80

# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞ (%)
DISK_CRITICAL=90
DISK_WARNING=80

# –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ CPU (¬∞C)
TEMP_CRITICAL=80
TEMP_WARNING=70

# –ü—Ä–æ–≤–µ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ (—Å–µ–∫—É–Ω–¥)
CHECK_INTERVAL=60

# –ú–µ—Ç–æ–¥—ã –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
ALERT_METHODS=("log" "console")  # log, console, email, telegram

# Email –¥–ª—è –æ–ø–æ–≤–µ—â–µ–Ω–∏–π (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
ALERT_EMAIL=""

# Telegram –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
TELEGRAM_BOT_TOKEN=""
TELEGRAM_CHAT_ID=""
EOF
    print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞: $ALERT_CONFIG"
}

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
load_config() {
    if [ -f "$ALERT_CONFIG" ]; then
        source "$ALERT_CONFIG"
    else
        print_warning "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."
        # –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        CPU_CRITICAL=90
        CPU_WARNING=80
        MEMORY_CRITICAL=90
        MEMORY_WARNING=80
        DISK_CRITICAL=90
        DISK_WARNING=80
        TEMP_CRITICAL=80
        TEMP_WARNING=70
        CHECK_INTERVAL=60
        ALERT_METHODS=("log" "console")
    fi
}

# –§—É–Ω–∫—Ü–∏–∏ —Å–±–æ—Ä–∞ –º–µ—Ç—Ä–∏–∫ (–∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–µ metrics-collector)
get_cpu_usage() {
    local cpu_usage=$(top -bn1 | grep "Cpu(s)" | sed "s/.*, *\([0-9.]*\)%* id.*/\1/" | awk '{print 100 - $1}')
    echo "${cpu_usage%.*}"
}

get_memory_usage() {
    local memory_info=$(free | grep Mem)
    local total_mem=$(echo $memory_info | awk '{print $2}')
    local available_mem=$(echo $memory_info | awk '{print $7}')
    
    if [ -n "$total_mem" ] && [ -n "$available_mem" ] && [ "$total_mem" -ne 0 ]; then
        local used_mem=$((total_mem - available_mem))
        local usage_percent=$((used_mem * 100 / total_mem))
        echo "$usage_percent"
    else
        echo "0"
    fi
}

get_disk_usage() {
    local disk_usage=$(df / | awk 'NR==2 {print $5}' | sed 's/%//')
    echo "$disk_usage"
}

get_temperature() {
    if [ -f "/sys/class/thermal/thermal_zone0/temp" ]; then
        local temp=$(cat /sys/class/thermal/thermal_zone0/temp)
        temp=$((temp / 1000))
        echo "$temp"
    else
        echo "N/A"
    fi
}

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π
log_alert() {
    local level=$1
    local message=$2
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    echo "[$timestamp] [$level] $message" >> "$ALERT_LOG"
    
    if [[ " ${ALERT_METHODS[@]} " =~ " console " ]]; then
        case $level in
            "CRITICAL")
                print_alert "$message"
                ;;
            "WARNING")
                print_warning "$message"
                ;;
            *)
                echo "‚ÑπÔ∏è  $message"
                ;;
        esac
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫
check_metrics() {
    local cpu_usage=$(get_cpu_usage)
    local mem_usage=$(get_memory_usage)
    local disk_usage=$(get_disk_usage)
    local temp=$(get_temperature)
    
    local has_alerts=0
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ CPU
    if [ "$cpu_usage" -ge "$CPU_CRITICAL" ] 2>/dev/null; then
        log_alert "CRITICAL" "–í—ã—Å–æ–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ CPU: ${cpu_usage}% (–ø–æ—Ä–æ–≥: ${CPU_CRITICAL}%)"
        has_alerts=1
    elif [ "$cpu_usage" -ge "$CPU_WARNING" ] 2>/dev/null; then
        log_alert "WARNING" "–ó–∞–≥—Ä—É–∑–∫–∞ CPU –ø–æ–≤—ã—à–µ–Ω–∞: ${cpu_usage}% (–ø–æ—Ä–æ–≥: ${CPU_WARNING}%)"
        has_alerts=1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–º—è—Ç–∏
    if [ "$mem_usage" -ge "$MEMORY_CRITICAL" ] 2>/dev/null; then
        log_alert "CRITICAL" "–í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏: ${mem_usage}% (–ø–æ—Ä–æ–≥: ${MEMORY_CRITICAL}%)"
        has_alerts=1
    elif [ "$mem_usage" -ge "$MEMORY_WARNING" ] 2>/dev/null; then
        log_alert "WARNING" "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ –ø–æ–≤—ã—à–µ–Ω–æ: ${mem_usage}% (–ø–æ—Ä–æ–≥: ${MEMORY_WARNING}%)"
        has_alerts=1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–∞
    if [ "$disk_usage" -ge "$DISK_CRITICAL" ] 2>/dev/null; then
        log_alert "CRITICAL" "–í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: ${disk_usage}% (–ø–æ—Ä–æ–≥: ${DISK_CRITICAL}%)"
        has_alerts=1
    elif [ "$disk_usage" -ge "$DISK_WARNING" ] 2>/dev/null; then
        log_alert "WARNING" "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞ –ø–æ–≤—ã—à–µ–Ω–æ: ${disk_usage}% (–ø–æ—Ä–æ–≥: ${DISK_WARNING}%)"
        has_alerts=1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
    if [ "$temp" != "N/A" ] && [ "$temp" -ge "$TEMP_CRITICAL" ] 2>/dev/null; then
        log_alert "CRITICAL" "–í—ã—Å–æ–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ CPU: ${temp}¬∞C (–ø–æ—Ä–æ–≥: ${TEMP_CRITICAL}¬∞C)"
        has_alerts=1
    elif [ "$temp" != "N/A" ] && [ "$temp" -ge "$TEMP_WARNING" ] 2>/dev/null; then
        log_alert "WARNING" "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ CPU –ø–æ–≤—ã—à–µ–Ω–∞: ${temp}¬∞C (–ø–æ—Ä–æ–≥: ${TEMP_WARNING}¬∞C)"
        has_alerts=1
    fi
    
    if [ $has_alerts -eq 0 ]; then
        echo "  ‚úÖ –í—Å–µ –º–µ—Ç—Ä–∏–∫–∏ –≤ –Ω–æ—Ä–º–µ"
    fi
}

# –†–µ–∂–∏–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitor_mode() {
    print_header
    echo "  üîç –ù–∞—á–∞–ª–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º—ã..."
    echo "  ‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: ${CHECK_INTERVAL} —Å–µ–∫—É–Ω–¥"
    echo "  üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –º–µ—Ç—Ä–∏–∫–∏:"
    echo "    üíª CPU: > ${CPU_WARNING}% (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ), > ${CPU_CRITICAL}% (–∫—Ä–∏—Ç–∏—á–Ω–æ)"
    echo "    üß† –ü–∞–º—è—Ç—å: > ${MEMORY_WARNING}% (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ), > ${MEMORY_CRITICAL}% (–∫—Ä–∏—Ç–∏—á–Ω–æ)"
    echo "    üíæ –î–∏—Å–∫: > ${DISK_WARNING}% (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ), > ${DISK_CRITICAL}% (–∫—Ä–∏—Ç–∏—á–Ω–æ)"
    echo "    üå°Ô∏è  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: > ${TEMP_WARNING}¬∞C (–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ), > ${TEMP_CRITICAL}¬∞C (–∫—Ä–∏—Ç–∏—á–Ω–æ)"
    echo ""
    echo "  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
    echo ""
    
    local counter=0
    while true; do
        counter=$((counter + 1))
        echo "======= –ü—Ä–æ–≤–µ—Ä–∫–∞ #$counter ($(date '+%H:%M:%S')) ======="
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
        local cpu_usage=$(get_cpu_usage)
        local mem_usage=$(get_memory_usage)
        local disk_usage=$(get_disk_usage)
        local temp=$(get_temperature)
        echo "  üìä –¢–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è:"
        echo "    üíª CPU: ${cpu_usage}%"
        echo "    üß† –ü–∞–º—è—Ç—å: ${mem_usage}%"
        echo "    üíæ –î–∏—Å–∫: ${disk_usage}%"
        echo "    üå°Ô∏è  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temp}¬∞C"
        echo ""
        echo "  üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:"
        check_metrics
        echo "======================================"
        echo ""
        sleep "$CHECK_INTERVAL"
    done
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π
show_history() {
    print_section "–ò–°–¢–û–†–ò–Ø –û–ü–û–í–ï–©–ï–ù–ò–ô"
    
    if [ -f "$ALERT_LOG" ]; then
        if [ -s "$ALERT_LOG" ]; then
            tail -20 "$ALERT_LOG"
            echo ""
            echo "üìÅ –ü–æ–ª–Ω—ã–π –ª–æ–≥: $ALERT_LOG"
        else
            echo "  ‚ÑπÔ∏è  –û–ø–æ–≤–µ—â–µ–Ω–∏–π –Ω–µ –±—ã–ª–æ"
        fi
    else
        echo "  ‚ÑπÔ∏è  –§–∞–π–ª –ª–æ–≥–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

# –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
show_status() {
    print_section "–¢–ï–ö–£–©–ò–ô –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–´"
    
    local cpu_usage=$(get_cpu_usage)
    local mem_usage=$(get_memory_usage)
    local disk_usage=$(get_disk_usage)
    local temp=$(get_temperature)
    
    echo "  üíª CPU: ${cpu_usage}%"
    if [ "$cpu_usage" -ge "$CPU_CRITICAL" ] 2>/dev/null; then
        print_alert "  üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –£–†–û–í–ï–ù–¨"
    elif [ "$cpu_usage" -ge "$CPU_WARNING" ] 2>/dev/null; then
        print_warning "  ‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï"
    else
        print_success "  ‚úÖ –ù–û–†–ú–ê"
    fi
    
    echo "  üß† –ü–∞–º—è—Ç—å: ${mem_usage}%"
    if [ "$mem_usage" -ge "$MEMORY_CRITICAL" ] 2>/dev/null; then
        print_alert "  üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –£–†–û–í–ï–ù–¨"
    elif [ "$mem_usage" -ge "$MEMORY_WARNING" ] 2>/dev/null; then
        print_warning "  ‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï"
    else
        print_success "  ‚úÖ –ù–û–†–ú–ê"
    fi
    
    echo "  üíæ –î–∏—Å–∫: ${disk_usage}%"
    if [ "$disk_usage" -ge "$DISK_CRITICAL" ] 2>/dev/null; then
        print_alert "  üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –£–†–û–í–ï–ù–¨"
    elif [ "$disk_usage" -ge "$DISK_WARNING" ] 2>/dev/null; then
        print_warning "  ‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï"
    else
        print_success "  ‚úÖ –ù–û–†–ú–ê"
    fi
    
    if [ "$temp" != "N/A" ]; then
        echo "  üå°Ô∏è  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temp}¬∞C"
        if [ "$temp" -ge "$TEMP_CRITICAL" ] 2>/dev/null; then
            print_alert "  üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –£–†–û–í–ï–ù–¨"
        elif [ "$temp" -ge "$TEMP_WARNING" ] 2>/dev/null; then
            print_warning "  ‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï"
        else
            print_success "  ‚úÖ –ù–û–†–ú–ê"
        fi
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    load_config
    
    case "${1:-}" in
        "monitor")
            monitor_mode
            ;;
        "status")
            print_header
            show_status
            ;;
        "history")
            print_header
            show_history
            ;;
        "config")
            create_config
            ;;
        "test")
            print_header
            echo "  üß™ –¢–ï–°–¢–û–í–ê–Ø –ü–†–û–í–ï–†–ö–ê –ú–ï–¢–†–ò–ö"
            echo ""
            check_metrics
            ;;
        "help"|"--help"|"-h"|"")
            print_header
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]"
            echo ""
            echo "–ö–æ–º–∞–Ω–¥—ã:"
            echo "  monitor  - –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã"
            echo "  status   - –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
            echo "  history  - –ò—Å—Ç–æ—Ä–∏—è –æ–ø–æ–≤–µ—â–µ–Ω–∏–π"
            echo "  config   - –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª"
            echo "  test     - –¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫"
            echo "  help     - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
            echo ""
            echo "–ü—Ä–∏–º–µ—Ä—ã:"
            echo "  $0 monitor    # –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
            echo "  $0 status     # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞"
            echo "  $0 history    # –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π"
            ;;
        *)
            print_alert "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: $0 help"
            exit 1
            ;;
    esac
}

main "$@"
