#!/bin/bash

echo "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–°–ï–• –°–ö–†–ò–ü–¢–û–í –°–ò–°–¢–ï–ú–ù–û–ì–û –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê"
echo "====================================================="

# –°–æ–∑–¥–∞–µ–º –ª–æ–≥-—Ñ–∞–π–ª
LOG_FILE="logs/script-tests.log"
mkdir -p logs
echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ - $(date)" > $LOG_FILE

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞
test_script() {
    local script_name=$1
    local test_command=$2
    
    echo -n "üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º $script_name... "
    
    if [ -f "./scripts/$script_name" ]; then
        if eval $test_command >> $LOG_FILE 2>&1; then
            echo "‚úÖ OK"
            return 0
        else
            echo "‚ùå FAILED"
            return 1
        fi
    else
        echo "üìõ NOT FOUND"
        return 2
    fi
}

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç—ã
echo ""
echo "üìã –¢–ï–°–¢–ò–†–£–ï–ú –°–ö–†–ò–ü–¢–´:"
echo "===================="

test_script "system-monitor.sh" "./scripts/system-monitor.sh --help"
test_script "disk-manager.sh" "./scripts/disk-manager.sh info"
test_script "user-manager.sh" "./scripts/user-manager.sh --help"
test_script "service-manager.sh" "./scripts/service-manager.sh list"
test_script "network-analyzer.sh" "./scripts/network-analyzer.sh --help"
test_script "security-audit.sh" "./scripts/security-audit.sh --help"
test_script "backup-manager.sh" "./scripts/backup-manager.sh --help"
test_script "package-manager.sh" "./scripts/package-manager.sh help"
test_script "git-helper.sh" "./scripts/git-helper.sh --help"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
echo ""
echo "üîê –ü–†–û–í–ï–†–ö–ê –ü–†–ê–í –î–û–°–¢–£–ü–ê:"
echo "========================"

for script in ./scripts/*.sh; do
    if [ -f "$script" ]; then
        if [ -x "$script" ]; then
            echo "‚úÖ $(basename $script): –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
        else
            echo "‚ùå $(basename $script): –Ω–µ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π"
            chmod +x "$script"
            echo "   üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"
        fi
    fi
done

echo ""
echo "üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:"
echo "====================="
echo "üìù –ü–æ–¥—Ä–æ–±–Ω—ã–π –ª–æ–≥: $LOG_FILE"
echo "üí° –°–æ–≤–µ—Ç: –ü—Ä–æ–≤–µ—Ä—å –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—à–∏–±–∫–∞—Ö"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —É—Ç–∏–ª–∏—Ç
echo ""
echo "üõ†Ô∏è  –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô:"
echo "=========================="

check_dependency() {
    local dep=$1
    if command -v $dep &> /dev/null; then
        echo "‚úÖ $dep: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ùå $dep: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

check_dependency "smartctl"
check_dependency "iotop"
check_dependency "htop"
check_dependency "ncdu"
check_dependency "tree"
